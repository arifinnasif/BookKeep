/*
 Navicat Premium Data Transfer

 Source Server         : BOOKKEEP
 Source Server Type    : Oracle
 Source Server Version : 190000
 Source Host           : localhost:1521
 Source Schema         : BOOKKEEPER

 Target Server Type    : Oracle
 Target Server Version : 190000
 File Encoding         : 65001

 Date: 24/02/2022 19:29:34
*/


-- ----------------------------
-- Table structure for AUTHORS
-- ----------------------------
DROP TABLE "BOOKKEEPER"."AUTHORS";
CREATE TABLE "BOOKKEEPER"."AUTHORS" (
  "AUTHOR_ID" NUMBER VISIBLE DEFAULT "BOOKKEEPER"."ISEQ$$_73274".nextval NOT NULL,
  "NAME" VARCHAR2(64 BYTE) VISIBLE NOT NULL,
  "DOB" DATE VISIBLE,
  "DOD" DATE VISIBLE,
  "ABOUT" VARCHAR2(1024 BYTE) VISIBLE
)
LOGGING
NOCOMPRESS
PCTFREE 10
INITRANS 1
STORAGE (
  INITIAL 65536 
  NEXT 1048576 
  MINEXTENTS 1
  MAXEXTENTS 2147483645
  BUFFER_POOL DEFAULT
)
PARALLEL 1
NOCACHE
DISABLE ROW MOVEMENT
;

-- ----------------------------
-- Table structure for AUTH_GROUP
-- ----------------------------
DROP TABLE "BOOKKEEPER"."AUTH_GROUP";
CREATE TABLE "BOOKKEEPER"."AUTH_GROUP" (
  "ID" NUMBER(11,0) VISIBLE DEFAULT "BOOKKEEPER"."ISEQ$$_73094".nextval NOT NULL,
  "NAME" NVARCHAR2(150) VISIBLE
)
LOGGING
NOCOMPRESS
PCTFREE 10
INITRANS 1
STORAGE (
  BUFFER_POOL DEFAULT
)
PARALLEL 1
NOCACHE
DISABLE ROW MOVEMENT
;

-- ----------------------------
-- Table structure for AUTH_GROUP_PERMISSIONS
-- ----------------------------
DROP TABLE "BOOKKEEPER"."AUTH_GROUP_PERMISSIONS";
CREATE TABLE "BOOKKEEPER"."AUTH_GROUP_PERMISSIONS" (
  "ID" NUMBER(19,0) VISIBLE DEFAULT "BOOKKEEPER"."ISEQ$$_73098".nextval NOT NULL,
  "GROUP_ID" NUMBER(11,0) VISIBLE NOT NULL,
  "PERMISSION_ID" NUMBER(11,0) VISIBLE NOT NULL
)
LOGGING
NOCOMPRESS
PCTFREE 10
INITRANS 1
STORAGE (
  BUFFER_POOL DEFAULT
)
PARALLEL 1
NOCACHE
DISABLE ROW MOVEMENT
;

-- ----------------------------
-- Table structure for AUTH_PERMISSION
-- ----------------------------
DROP TABLE "BOOKKEEPER"."AUTH_PERMISSION";
CREATE TABLE "BOOKKEEPER"."AUTH_PERMISSION" (
  "ID" NUMBER(11,0) VISIBLE DEFAULT "BOOKKEEPER"."ISEQ$$_73091".nextval NOT NULL,
  "NAME" NVARCHAR2(255) VISIBLE,
  "CONTENT_TYPE_ID" NUMBER(11,0) VISIBLE NOT NULL,
  "CODENAME" NVARCHAR2(100) VISIBLE
)
LOGGING
NOCOMPRESS
PCTFREE 10
INITRANS 1
STORAGE (
  INITIAL 65536 
  NEXT 1048576 
  MINEXTENTS 1
  MAXEXTENTS 2147483645
  BUFFER_POOL DEFAULT
)
PARALLEL 1
NOCACHE
DISABLE ROW MOVEMENT
;

-- ----------------------------
-- Table structure for AUTH_USER
-- ----------------------------
DROP TABLE "BOOKKEEPER"."AUTH_USER";
CREATE TABLE "BOOKKEEPER"."AUTH_USER" (
  "ID" NUMBER(11,0) VISIBLE DEFAULT "BOOKKEEPER"."ISEQ$$_73101".nextval NOT NULL,
  "PASSWORD" NVARCHAR2(128) VISIBLE,
  "LAST_LOGIN" TIMESTAMP(6) VISIBLE,
  "IS_SUPERUSER" NUMBER(1,0) VISIBLE NOT NULL,
  "USERNAME" NVARCHAR2(150) VISIBLE,
  "FIRST_NAME" NVARCHAR2(150) VISIBLE,
  "LAST_NAME" NVARCHAR2(150) VISIBLE,
  "EMAIL" NVARCHAR2(254) VISIBLE,
  "IS_STAFF" NUMBER(1,0) VISIBLE NOT NULL,
  "IS_ACTIVE" NUMBER(1,0) VISIBLE NOT NULL,
  "DATE_JOINED" TIMESTAMP(6) VISIBLE NOT NULL
)
LOGGING
NOCOMPRESS
PCTFREE 10
INITRANS 1
STORAGE (
  BUFFER_POOL DEFAULT
)
PARALLEL 1
NOCACHE
DISABLE ROW MOVEMENT
;

-- ----------------------------
-- Table structure for AUTH_USER_GROUPS
-- ----------------------------
DROP TABLE "BOOKKEEPER"."AUTH_USER_GROUPS";
CREATE TABLE "BOOKKEEPER"."AUTH_USER_GROUPS" (
  "ID" NUMBER(19,0) VISIBLE DEFAULT "BOOKKEEPER"."ISEQ$$_73105".nextval NOT NULL,
  "USER_ID" NUMBER(11,0) VISIBLE NOT NULL,
  "GROUP_ID" NUMBER(11,0) VISIBLE NOT NULL
)
LOGGING
NOCOMPRESS
PCTFREE 10
INITRANS 1
STORAGE (
  BUFFER_POOL DEFAULT
)
PARALLEL 1
NOCACHE
DISABLE ROW MOVEMENT
;

-- ----------------------------
-- Table structure for AUTH_USER_USER_PERMISSIONS
-- ----------------------------
DROP TABLE "BOOKKEEPER"."AUTH_USER_USER_PERMISSIONS";
CREATE TABLE "BOOKKEEPER"."AUTH_USER_USER_PERMISSIONS" (
  "ID" NUMBER(19,0) VISIBLE DEFAULT "BOOKKEEPER"."ISEQ$$_73108".nextval NOT NULL,
  "USER_ID" NUMBER(11,0) VISIBLE NOT NULL,
  "PERMISSION_ID" NUMBER(11,0) VISIBLE NOT NULL
)
LOGGING
NOCOMPRESS
PCTFREE 10
INITRANS 1
STORAGE (
  BUFFER_POOL DEFAULT
)
PARALLEL 1
NOCACHE
DISABLE ROW MOVEMENT
;

-- ----------------------------
-- Table structure for BOOKS
-- ----------------------------
DROP TABLE "BOOKKEEPER"."BOOKS";
CREATE TABLE "BOOKKEEPER"."BOOKS" (
  "ISBN" VARCHAR2(16 BYTE) VISIBLE NOT NULL,
  "NAME" VARCHAR2(64 BYTE) VISIBLE NOT NULL,
  "EDITION" VARCHAR2(32 BYTE) VISIBLE,
  "RELEASE_DATE" DATE VISIBLE,
  "PRICE" NUMBER(10,2) VISIBLE NOT NULL,
  "PAGE_COUNT" NUMBER VISIBLE,
  "QUANTITY" NUMBER VISIBLE DEFAULT 0 NOT NULL,
  "PUBLISHER_ID" NUMBER VISIBLE
)
LOGGING
NOCOMPRESS
PCTFREE 10
INITRANS 1
STORAGE (
  INITIAL 65536 
  NEXT 1048576 
  MINEXTENTS 1
  MAXEXTENTS 2147483645
  BUFFER_POOL DEFAULT
)
PARALLEL 1
NOCACHE
DISABLE ROW MOVEMENT
;

-- ----------------------------
-- Table structure for BOOK_TYPE
-- ----------------------------
DROP TABLE "BOOKKEEPER"."BOOK_TYPE";
CREATE TABLE "BOOKKEEPER"."BOOK_TYPE" (
  "ISBN" VARCHAR2(16 BYTE) VISIBLE NOT NULL,
  "B_TYPE" VARCHAR2(64 BYTE) VISIBLE NOT NULL
)
LOGGING
NOCOMPRESS
PCTFREE 10
INITRANS 1
STORAGE (
  INITIAL 65536 
  NEXT 1048576 
  MINEXTENTS 1
  MAXEXTENTS 2147483645
  BUFFER_POOL DEFAULT
)
PARALLEL 1
NOCACHE
DISABLE ROW MOVEMENT
;

-- ----------------------------
-- Table structure for BORROWABLE_ITEMS
-- ----------------------------
DROP TABLE "BOOKKEEPER"."BORROWABLE_ITEMS";
CREATE TABLE "BOOKKEEPER"."BORROWABLE_ITEMS" (
  "BORROWABLE_ITEM_ID" NUMBER VISIBLE DEFAULT "BOOKKEEPER"."ISEQ$$_73284".nextval NOT NULL,
  "ISBN" VARCHAR2(16 BYTE) VISIBLE
)
LOGGING
NOCOMPRESS
PCTFREE 10
INITRANS 1
STORAGE (
  INITIAL 65536 
  NEXT 1048576 
  MINEXTENTS 1
  MAXEXTENTS 2147483645
  BUFFER_POOL DEFAULT
)
PARALLEL 1
NOCACHE
DISABLE ROW MOVEMENT
;

-- ----------------------------
-- Table structure for BORROWS
-- ----------------------------
DROP TABLE "BOOKKEEPER"."BORROWS";
CREATE TABLE "BOOKKEEPER"."BORROWS" (
  "BORROWABLE_ITEM_ID" NUMBER VISIBLE NOT NULL,
  "CUSTOMER_ID" VARCHAR2(64 BYTE) VISIBLE NOT NULL,
  "START_DATE" DATE VISIBLE,
  "END_DATE" DATE VISIBLE
)
LOGGING
NOCOMPRESS
PCTFREE 10
INITRANS 1
STORAGE (
  INITIAL 65536 
  NEXT 1048576 
  MINEXTENTS 1
  MAXEXTENTS 2147483645
  BUFFER_POOL DEFAULT
)
PARALLEL 1
NOCACHE
DISABLE ROW MOVEMENT
;

-- ----------------------------
-- Table structure for CARTS
-- ----------------------------
DROP TABLE "BOOKKEEPER"."CARTS";
CREATE TABLE "BOOKKEEPER"."CARTS" (
  "CUSTOMER_ID" VARCHAR2(64 BYTE) VISIBLE NOT NULL,
  "ISBN" VARCHAR2(16 BYTE) VISIBLE NOT NULL,
  "QUANTITY" NUMBER VISIBLE
)
LOGGING
NOCOMPRESS
PCTFREE 10
INITRANS 1
STORAGE (
  INITIAL 65536 
  NEXT 1048576 
  MINEXTENTS 1
  MAXEXTENTS 2147483645
  BUFFER_POOL DEFAULT
)
PARALLEL 1
NOCACHE
DISABLE ROW MOVEMENT
;

-- ----------------------------
-- Table structure for CUSTOMERS
-- ----------------------------
DROP TABLE "BOOKKEEPER"."CUSTOMERS";
CREATE TABLE "BOOKKEEPER"."CUSTOMERS" (
  "CUSTOMER_ID" VARCHAR2(64 BYTE) VISIBLE NOT NULL,
  "PASSWORD" VARCHAR2(64 BYTE) VISIBLE NOT NULL,
  "NAME" VARCHAR2(64 BYTE) VISIBLE NOT NULL,
  "ADDRESS" VARCHAR2(256 BYTE) VISIBLE,
  "EMAIL" VARCHAR2(64 BYTE) VISIBLE NOT NULL,
  "ACCOUNT_CREATED_ON" DATE VISIBLE
)
LOGGING
NOCOMPRESS
PCTFREE 10
INITRANS 1
STORAGE (
  INITIAL 65536 
  NEXT 1048576 
  MINEXTENTS 1
  MAXEXTENTS 2147483645
  BUFFER_POOL DEFAULT
)
PARALLEL 1
NOCACHE
DISABLE ROW MOVEMENT
;

-- ----------------------------
-- Table structure for CUSTOMER_CONTACT_NUMBER
-- ----------------------------
DROP TABLE "BOOKKEEPER"."CUSTOMER_CONTACT_NUMBER";
CREATE TABLE "BOOKKEEPER"."CUSTOMER_CONTACT_NUMBER" (
  "CUSTOMER_ID" VARCHAR2(64 BYTE) VISIBLE NOT NULL,
  "CONTACT_NUMBER" VARCHAR2(32 BYTE) VISIBLE NOT NULL
)
LOGGING
NOCOMPRESS
PCTFREE 10
INITRANS 1
STORAGE (
  INITIAL 65536 
  NEXT 1048576 
  MINEXTENTS 1
  MAXEXTENTS 2147483645
  BUFFER_POOL DEFAULT
)
PARALLEL 1
NOCACHE
DISABLE ROW MOVEMENT
;

-- ----------------------------
-- Table structure for DJANGO_ADMIN_LOG
-- ----------------------------
DROP TABLE "BOOKKEEPER"."DJANGO_ADMIN_LOG";
CREATE TABLE "BOOKKEEPER"."DJANGO_ADMIN_LOG" (
  "ID" NUMBER(11,0) VISIBLE DEFAULT "BOOKKEEPER"."ISEQ$$_73122".nextval NOT NULL,
  "ACTION_TIME" TIMESTAMP(6) VISIBLE NOT NULL,
  "OBJECT_ID" NCLOB VISIBLE,
  "OBJECT_REPR" NVARCHAR2(200) VISIBLE,
  "ACTION_FLAG" NUMBER(11,0) VISIBLE NOT NULL,
  "CHANGE_MESSAGE" NCLOB VISIBLE,
  "CONTENT_TYPE_ID" NUMBER(11,0) VISIBLE,
  "USER_ID" NUMBER(11,0) VISIBLE NOT NULL
)
LOGGING
NOCOMPRESS
PCTFREE 10
INITRANS 1
STORAGE (
  BUFFER_POOL DEFAULT
)
PARALLEL 1
NOCACHE
DISABLE ROW MOVEMENT
;

-- ----------------------------
-- Table structure for DJANGO_CONTENT_TYPE
-- ----------------------------
DROP TABLE "BOOKKEEPER"."DJANGO_CONTENT_TYPE";
CREATE TABLE "BOOKKEEPER"."DJANGO_CONTENT_TYPE" (
  "ID" NUMBER(11,0) VISIBLE DEFAULT "BOOKKEEPER"."ISEQ$$_73087".nextval NOT NULL,
  "APP_LABEL" NVARCHAR2(100) VISIBLE,
  "MODEL" NVARCHAR2(100) VISIBLE
)
LOGGING
NOCOMPRESS
PCTFREE 10
INITRANS 1
STORAGE (
  INITIAL 65536 
  NEXT 1048576 
  MINEXTENTS 1
  MAXEXTENTS 2147483645
  BUFFER_POOL DEFAULT
)
PARALLEL 1
NOCACHE
DISABLE ROW MOVEMENT
;

-- ----------------------------
-- Table structure for DJANGO_MIGRATIONS
-- ----------------------------
DROP TABLE "BOOKKEEPER"."DJANGO_MIGRATIONS";
CREATE TABLE "BOOKKEEPER"."DJANGO_MIGRATIONS" (
  "ID" NUMBER(19,0) VISIBLE DEFAULT "BOOKKEEPER"."ISEQ$$_73084".nextval NOT NULL,
  "APP" NVARCHAR2(255) VISIBLE,
  "NAME" NVARCHAR2(255) VISIBLE,
  "APPLIED" TIMESTAMP(6) VISIBLE NOT NULL
)
LOGGING
NOCOMPRESS
PCTFREE 10
INITRANS 1
STORAGE (
  INITIAL 65536 
  NEXT 1048576 
  MINEXTENTS 1
  MAXEXTENTS 2147483645
  BUFFER_POOL DEFAULT
)
PARALLEL 1
NOCACHE
DISABLE ROW MOVEMENT
;

-- ----------------------------
-- Table structure for DJANGO_SESSION
-- ----------------------------
DROP TABLE "BOOKKEEPER"."DJANGO_SESSION";
CREATE TABLE "BOOKKEEPER"."DJANGO_SESSION" (
  "SESSION_KEY" NVARCHAR2(40) VISIBLE NOT NULL,
  "SESSION_DATA" NCLOB VISIBLE,
  "EXPIRE_DATE" TIMESTAMP(6) VISIBLE NOT NULL
)
LOGGING
NOCOMPRESS
PCTFREE 10
INITRANS 1
STORAGE (
  INITIAL 65536 
  NEXT 1048576 
  MINEXTENTS 1
  MAXEXTENTS 2147483645
  BUFFER_POOL DEFAULT
)
PARALLEL 1
NOCACHE
DISABLE ROW MOVEMENT
;

-- ----------------------------
-- Table structure for EXPIRED
-- ----------------------------
DROP TABLE "BOOKKEEPER"."EXPIRED";
CREATE TABLE "BOOKKEEPER"."EXPIRED" (
  "EXPIRED_ID" NUMBER VISIBLE DEFAULT "BOOKKEEPER"."ISEQ$$_73564".nextval NOT NULL,
  "CUSTOMER_ID" VARCHAR2(64 BYTE) VISIBLE,
  "BORROWABLE_ITEM_ID" NUMBER VISIBLE,
  "ISSUE_DATE" DATE VISIBLE
)
LOGGING
NOCOMPRESS
PCTFREE 10
INITRANS 1
STORAGE (
  INITIAL 65536 
  NEXT 1048576 
  MINEXTENTS 1
  MAXEXTENTS 2147483645
  BUFFER_POOL DEFAULT
)
PARALLEL 1
NOCACHE
DISABLE ROW MOVEMENT
;

-- ----------------------------
-- Table structure for MANAGERS
-- ----------------------------
DROP TABLE "BOOKKEEPER"."MANAGERS";
CREATE TABLE "BOOKKEEPER"."MANAGERS" (
  "ADMIN_ID" VARCHAR2(64 BYTE) VISIBLE NOT NULL,
  "PASSWORD" VARCHAR2(64 BYTE) VISIBLE NOT NULL
)
LOGGING
NOCOMPRESS
PCTFREE 10
INITRANS 1
STORAGE (
  INITIAL 65536 
  NEXT 1048576 
  MINEXTENTS 1
  MAXEXTENTS 2147483645
  BUFFER_POOL DEFAULT
)
PARALLEL 1
NOCACHE
DISABLE ROW MOVEMENT
;

-- ----------------------------
-- Table structure for OFFERS
-- ----------------------------
DROP TABLE "BOOKKEEPER"."OFFERS";
CREATE TABLE "BOOKKEEPER"."OFFERS" (
  "OFFER_ID" NUMBER VISIBLE DEFAULT "BOOKKEEPER"."ISEQ$$_73279".nextval NOT NULL,
  "NAME" VARCHAR2(64 BYTE) VISIBLE NOT NULL,
  "DISCOUNT_PCT" NUMBER(3,2) VISIBLE,
  "START_DATE" DATE VISIBLE,
  "PERIOD" NUMBER VISIBLE
)
LOGGING
NOCOMPRESS
PCTFREE 10
INITRANS 1
STORAGE (
  INITIAL 65536 
  NEXT 1048576 
  MINEXTENTS 1
  MAXEXTENTS 2147483645
  BUFFER_POOL DEFAULT
)
PARALLEL 1
NOCACHE
DISABLE ROW MOVEMENT
;

-- ----------------------------
-- Table structure for OFFER_BOOK
-- ----------------------------
DROP TABLE "BOOKKEEPER"."OFFER_BOOK";
CREATE TABLE "BOOKKEEPER"."OFFER_BOOK" (
  "ISBN" VARCHAR2(16 BYTE) VISIBLE NOT NULL,
  "OFFER_ID" NUMBER VISIBLE
)
LOGGING
NOCOMPRESS
PCTFREE 10
INITRANS 1
STORAGE (
  INITIAL 65536 
  NEXT 1048576 
  MINEXTENTS 1
  MAXEXTENTS 2147483645
  BUFFER_POOL DEFAULT
)
PARALLEL 1
NOCACHE
DISABLE ROW MOVEMENT
;

-- ----------------------------
-- Table structure for ORDERS
-- ----------------------------
DROP TABLE "BOOKKEEPER"."ORDERS";
CREATE TABLE "BOOKKEEPER"."ORDERS" (
  "ORDER_ID" NUMBER VISIBLE DEFAULT "BOOKKEEPER"."ISEQ$$_73299".nextval NOT NULL,
  "CUSTOMER_ID" VARCHAR2(64 BYTE) VISIBLE,
  "ORDERING_DATE" DATE VISIBLE,
  "DELIVERY_DATE" DATE VISIBLE
)
LOGGING
NOCOMPRESS
PCTFREE 10
INITRANS 1
STORAGE (
  INITIAL 65536 
  NEXT 1048576 
  MINEXTENTS 1
  MAXEXTENTS 2147483645
  BUFFER_POOL DEFAULT
)
PARALLEL 1
NOCACHE
DISABLE ROW MOVEMENT
;

-- ----------------------------
-- Table structure for ORDER_BOOK
-- ----------------------------
DROP TABLE "BOOKKEEPER"."ORDER_BOOK";
CREATE TABLE "BOOKKEEPER"."ORDER_BOOK" (
  "ORDER_ID" NUMBER VISIBLE NOT NULL,
  "ISBN" VARCHAR2(16 BYTE) VISIBLE NOT NULL,
  "UNIT_PRICE" NUMBER(10,2) VISIBLE,
  "QUANTITY" NUMBER VISIBLE
)
LOGGING
NOCOMPRESS
PCTFREE 10
INITRANS 1
STORAGE (
  INITIAL 65536 
  NEXT 1048576 
  MINEXTENTS 1
  MAXEXTENTS 2147483645
  BUFFER_POOL DEFAULT
)
PARALLEL 1
NOCACHE
DISABLE ROW MOVEMENT
;

-- ----------------------------
-- Table structure for PLANS
-- ----------------------------
DROP TABLE "BOOKKEEPER"."PLANS";
CREATE TABLE "BOOKKEEPER"."PLANS" (
  "PLAN_ID" NUMBER VISIBLE DEFAULT "BOOKKEEPER"."ISEQ$$_73470".nextval NOT NULL,
  "NAME" VARCHAR2(64 BYTE) VISIBLE NOT NULL,
  "PERIOD" NUMBER VISIBLE,
  "BORROW_LIMIT" NUMBER VISIBLE,
  "PRICE" NUMBER(10,2) VISIBLE
)
LOGGING
NOCOMPRESS
PCTFREE 10
INITRANS 1
STORAGE (
  INITIAL 65536 
  NEXT 1048576 
  MINEXTENTS 1
  MAXEXTENTS 2147483645
  BUFFER_POOL DEFAULT
)
PARALLEL 1
NOCACHE
DISABLE ROW MOVEMENT
;

-- ----------------------------
-- Table structure for PUBLISHERS
-- ----------------------------
DROP TABLE "BOOKKEEPER"."PUBLISHERS";
CREATE TABLE "BOOKKEEPER"."PUBLISHERS" (
  "PUBLISHER_ID" NUMBER VISIBLE DEFAULT "BOOKKEEPER"."ISEQ$$_73269".nextval NOT NULL,
  "NAME" VARCHAR2(64 BYTE) VISIBLE NOT NULL,
  "OFFICE_LOCATION" VARCHAR2(256 BYTE) VISIBLE
)
LOGGING
NOCOMPRESS
PCTFREE 10
INITRANS 1
STORAGE (
  INITIAL 65536 
  NEXT 1048576 
  MINEXTENTS 1
  MAXEXTENTS 2147483645
  BUFFER_POOL DEFAULT
)
PARALLEL 1
NOCACHE
DISABLE ROW MOVEMENT
;

-- ----------------------------
-- Table structure for PUBLISHER_CONTACT_NUMBER
-- ----------------------------
DROP TABLE "BOOKKEEPER"."PUBLISHER_CONTACT_NUMBER";
CREATE TABLE "BOOKKEEPER"."PUBLISHER_CONTACT_NUMBER" (
  "PUBLISHER_ID" NUMBER VISIBLE NOT NULL,
  "CONTACT_NUMBER" VARCHAR2(32 BYTE) VISIBLE NOT NULL
)
LOGGING
NOCOMPRESS
PCTFREE 10
INITRANS 1
STORAGE (
  INITIAL 65536 
  NEXT 1048576 
  MINEXTENTS 1
  MAXEXTENTS 2147483645
  BUFFER_POOL DEFAULT
)
PARALLEL 1
NOCACHE
DISABLE ROW MOVEMENT
;

-- ----------------------------
-- Table structure for REQUESTS
-- ----------------------------
DROP TABLE "BOOKKEEPER"."REQUESTS";
CREATE TABLE "BOOKKEEPER"."REQUESTS" (
  "CUSTOMER_ID" VARCHAR2(64 BYTE) VISIBLE NOT NULL,
  "ISBN" VARCHAR2(16 BYTE) VISIBLE NOT NULL
)
LOGGING
NOCOMPRESS
PCTFREE 10
INITRANS 1
STORAGE (
  INITIAL 65536 
  NEXT 1048576 
  MINEXTENTS 1
  MAXEXTENTS 2147483645
  BUFFER_POOL DEFAULT
)
PARALLEL 1
NOCACHE
DISABLE ROW MOVEMENT
;

-- ----------------------------
-- Table structure for REVIEWS
-- ----------------------------
DROP TABLE "BOOKKEEPER"."REVIEWS";
CREATE TABLE "BOOKKEEPER"."REVIEWS" (
  "CUSTOMER_ID" VARCHAR2(64 BYTE) VISIBLE NOT NULL,
  "ISBN" VARCHAR2(16 BYTE) VISIBLE NOT NULL,
  "RATING" NUMBER VISIBLE,
  "FEEDBACK" VARCHAR2(256 BYTE) VISIBLE
)
LOGGING
NOCOMPRESS
PCTFREE 10
INITRANS 1
STORAGE (
  INITIAL 65536 
  NEXT 1048576 
  MINEXTENTS 1
  MAXEXTENTS 2147483645
  BUFFER_POOL DEFAULT
)
PARALLEL 1
NOCACHE
DISABLE ROW MOVEMENT
;

-- ----------------------------
-- Table structure for SUBSCRIBERS
-- ----------------------------
DROP TABLE "BOOKKEEPER"."SUBSCRIBERS";
CREATE TABLE "BOOKKEEPER"."SUBSCRIBERS" (
  "CUSTOMER_ID" VARCHAR2(64 BYTE) VISIBLE NOT NULL,
  "MEMBERSHIP_BOUGHT_ON" DATE VISIBLE,
  "PLAN_ID" NUMBER VISIBLE
)
LOGGING
NOCOMPRESS
PCTFREE 10
INITRANS 1
STORAGE (
  INITIAL 65536 
  NEXT 1048576 
  MINEXTENTS 1
  MAXEXTENTS 2147483645
  BUFFER_POOL DEFAULT
)
PARALLEL 1
NOCACHE
DISABLE ROW MOVEMENT
;

-- ----------------------------
-- Table structure for WISHLISTS
-- ----------------------------
DROP TABLE "BOOKKEEPER"."WISHLISTS";
CREATE TABLE "BOOKKEEPER"."WISHLISTS" (
  "CUSTOMER_ID" VARCHAR2(64 BYTE) VISIBLE NOT NULL,
  "ISBN" VARCHAR2(16 BYTE) VISIBLE NOT NULL
)
LOGGING
NOCOMPRESS
PCTFREE 10
INITRANS 1
STORAGE (
  INITIAL 65536 
  NEXT 1048576 
  MINEXTENTS 1
  MAXEXTENTS 2147483645
  BUFFER_POOL DEFAULT
)
PARALLEL 1
NOCACHE
DISABLE ROW MOVEMENT
;

-- ----------------------------
-- Table structure for WRITES
-- ----------------------------
DROP TABLE "BOOKKEEPER"."WRITES";
CREATE TABLE "BOOKKEEPER"."WRITES" (
  "AUTHOR_ID" NUMBER VISIBLE NOT NULL,
  "ISBN" VARCHAR2(16 BYTE) VISIBLE NOT NULL
)
LOGGING
NOCOMPRESS
PCTFREE 10
INITRANS 1
STORAGE (
  INITIAL 65536 
  NEXT 1048576 
  MINEXTENTS 1
  MAXEXTENTS 2147483645
  BUFFER_POOL DEFAULT
)
PARALLEL 1
NOCACHE
DISABLE ROW MOVEMENT
;

-- ----------------------------
-- Function structure for ACCEPT_BORROW_REQUEST
-- ----------------------------
CREATE OR REPLACE
FUNCTION "BOOKKEEPER"."ACCEPT_BORROW_REQUEST" AS
BEGIN
		REMOVE_EXPIRED_SUBSCRIBERS(ARG_CURRENT_DATE);
		SELECT COUNT(*) INTO CNT_SUB FROM SUBSCRIBERS WHERE CUSTOMER_ID = ARG_CUSTOMER_ID;

		IF CNT_SUB = 0 THEN
            RETURN 1;
        END IF;
		SELECT COUNT(*) INTO CNT_BOOKS_IN_BORROWS
		FROM BORROWS A
		INNER JOIN BORROWABLE_ITEMS B USING(BORROWABLE_ITEM_ID)
		WHERE A.CUSTOMER_ID = ARG_CUSTOMER_ID AND B.ISBN = ARG_ISBN;

		IF CNT_BOOKS_IN_BORROWS <> 0 THEN
			RETURN 4;
		END IF;

		SELECT COUNT(*) INTO CNT_ALREADY_BORROWED FROM BORROWS WHERE CUSTOMER_ID = ARG_CUSTOMER_ID;
		SELECT P.BORROW_LIMIT INTO CNT_LIMIT
		    FROM PLANS P
		    WHERE P.PLAN_ID = (
		        SELECT S.PLAN_ID
		        FROM SUBSCRIBERS S
		        WHERE S.CUSTOMER_ID = ARG_CUSTOMER_ID
		    );
		IF CNT_LIMIT <= CNT_ALREADY_BORROWED THEN
            RETURN 2;
        END IF;
		SELECT BORROWABLE_ITEM_ID INTO B_ID
		FROM
		(((SELECT BORROWABLE_ITEM_ID FROM BORROWABLE_ITEMS WHERE ISBN = ARG_ISBN)
	    MINUS
	    (SELECT BORROWABLE_ITEM_ID FROM BORROWS WHERE END_DATE IS NULL))
	    MINUS
	    (SELECT BORROWABLE_ITEM_ID FROM EXPIRED))
		WHERE ROWNUM = 1;

        INSERT INTO
            BORROWS(BORROWABLE_ITEM_ID, CUSTOMER_ID, START_DATE)
            VALUES (B_ID, ARG_CUSTOMER_ID, ARG_CURRENT_DATE);

		RETURN 0;

	EXCEPTION
	    WHEN NO_DATA_FOUND THEN
        RETURN 3;

	END;
/

-- ----------------------------
-- Function structure for ADD_BOOK_TO_BORROWABLE
-- ----------------------------
CREATE OR REPLACE
FUNCTION "BOOKKEEPER"."ADD_BOOK_TO_BORROWABLE" AS
BEGIN
        SELECT QUANTITY INTO V_QUANTITY FROM BOOKS WHERE ISBN = ARG_ISBN;
        IF V_QUANTITY = 0 THEN
            RETURN V_QUANTITY;
        END IF;

        INSERT INTO BORROWABLE_ITEMS(ISBN) VALUES (ARG_ISBN);

        SELECT QUANTITY INTO V_QUANTITY FROM BOOKS WHERE ISBN = ARG_ISBN;
        RETURN V_QUANTITY;

        EXCEPTION
         WHEN NO_DATA_FOUND THEN
            RETURN 0;
    END;
/

-- ----------------------------
-- Function structure for CHECK_BOOK_STOCK
-- ----------------------------
CREATE OR REPLACE
PROCEDURE "BOOKKEEPER"."CHECK_BOOK_STOCK" AS
BEGIN
	FLAG := 1;

	FOR R IN (SELECT * FROM CARTS WHERE CUSTOMER_ID = ARG_CUSTOMER_ID)

	LOOP 
		REQ_QNT := R.QUANTITY;
		dbms_output.put_line(REQ_QNT);
		SELECT QUANTITY INTO AVL_QNT FROM BOOKS WHERE ISBN = R.ISBN;

		IF AVL_QNT < REQ_QNT THEN
			FLAG := 0;
		END IF;
	END LOOP;

-- EXCEPTION
-- 	WHEN OTHERS THEN
-- 		dbms_output.put_line('ERROR');
END;
/

-- ----------------------------
-- Function structure for INSERT_AUTHOR_INFO
-- ----------------------------
CREATE OR REPLACE
PROCEDURE "BOOKKEEPER"."INSERT_AUTHOR_INFO" AS
BEGIN
		A_ID := AUTHOR_ID_AUTOINCREMENT_SEQ.NEXTVAL;
		INSERT INTO AUTHORS (
			AUTHOR_ID,
			NAME,
			DOB,
			DOD,
			ABOUT
		) VALUES (
			A_ID,
			ARG_NAME,
			ARG_DOB,
			ARG_DOD,
			ARG_ABOUT
		);
		RET_AUTHOR_ID := A_ID;
	END;
/

-- ----------------------------
-- Function structure for INSERT_BOOK_INFO
-- ----------------------------
CREATE OR REPLACE
PROCEDURE "BOOKKEEPER"."INSERT_BOOK_INFO" AS
BEGIN
		INSERT INTO BOOKS(
				ISBN,
				NAME,
				EDITION,
				RELEASE_DATE,
				PRICE,
				PAGE_COUNT,
				QUANTITY,
				PUBLISHER_ID
			) VALUES (
				ARG_ISBN,
				INITCAP(ARG_BOOKNAME),
				ARG_EDITION,
				ARG_RELEASE_DATE,
				ARG_PRICE,
				ARG_PAGE_COUNT,
				ARG_QUANTITY,
				ARG_PUBLISHER_ID
			);
		SELECT COUNT(*) INTO CNT_BOOK_IN_WRITES FROM WRITES WHERE AUTHOR_ID=ARG_AUTHOR_ID AND ISBN=ARG_ISBN;
		IF CNT_BOOK_IN_WRITES = 0 THEN
			INSERT INTO WRITES(
					AUTHOR_ID,
					ISBN
				) VALUES (
					ARG_AUTHOR_ID,
					ARG_ISBN
				);
		END IF;
		COMMIT;
	END;
/

-- ----------------------------
-- Function structure for INSERT_UPDATE_CART
-- ----------------------------
CREATE OR REPLACE
PROCEDURE "BOOKKEEPER"."INSERT_UPDATE_CART" AS
BEGIN
	SELECT COUNT(*) INTO BOOK_COUNT 
	FROM CARTS 
	WHERE CUSTOMER_ID = CID AND ISBN = ARG_ISBN;
	
	IF BOOK_COUNT = 0 THEN
		INSERT INTO CARTS (CUSTOMER_ID, ISBN, QUANTITY)
		VALUES (CID, ARG_ISBN, ARG_QUANT);
		MSG := 'Book Added To Cart!';
	ELSE 
		UPDATE CARTS 
    	SET QUANTITY = ARG_QUANT
    	WHERE CUSTOMER_ID = CID AND ISBN = ARG_ISBN;
		MSG := 'Cart Edited Successfully!';
	END IF;
	
EXCEPTION
	WHEN OTHERS THEN 
		MSG:= 'Something Went Wrong!';
		
END;
/

-- ----------------------------
-- Function structure for MAKE_ORDER
-- ----------------------------
CREATE OR REPLACE
PROCEDURE "BOOKKEEPER"."MAKE_ORDER" AS
BEGIN
        SELECT COUNT(*) INTO CNT_CSTMR_IN_CARTS FROM CARTS WHERE CUSTOMER_ID = ARG_CUSTOMER_ID;
        IF CNT_CSTMR_IN_CARTS <> 0 THEN
            IS_SOME_ORDER_VALID := 0;

            FOR R IN (
                    SELECT ISBN, B.PRICE AS B_PRICE, B.QUANTITY AS B_QUANTITY, CRT.QUANTITY AS CRT_QUANTITY, TOTAL_DCT_PCT AS OFR_TOTAL_DCT_PCT
                    FROM BOOKS B
                    INNER JOIN CARTS CRT USING (ISBN)
                    LEFT OUTER JOIN
                        (
                            SELECT SUM(DISCOUNT_PCT) AS TOTAL_DCT_PCT, ISBN
                            FROM OFFER_BOOK
                            INNER JOIN OFFERS USING(OFFER_ID)
                            WHERE (START_DATE + PERIOD) >= ARG_ORDERING_DATE AND START_DATE <= ARG_ORDERING_DATE
                            GROUP BY ISBN -- UNNECESSARY. AS ISBN IS A PK IN OFFER_BOOK BUT STILL
                        ) OFR USING (ISBN) WHERE CUSTOMER_ID = ARG_CUSTOMER_ID
                )
                LOOP

                ORDR_QUANTITY := LEAST(R.CRT_QUANTITY, R.B_QUANTITY);
                IF ORDR_QUANTITY <> 0 THEN
                    IF IS_SOME_ORDER_VALID = 0 THEN
                        -- THIS BLOCK SHOULD RUN ONCE
                        IS_SOME_ORDER_VALID := 1;
                        O_ID := ORDER_ID_AUTOINCREMENT_SEQ.NEXTVAL;
                        INSERT INTO ORDERS (ORDER_ID, CUSTOMER_ID, ORDERING_DATE) VALUES (O_ID, ARG_CUSTOMER_ID, ARG_ORDERING_DATE);
                    END IF;

                    U_PRICE := R.B_PRICE * (1.0 - NVL(R.OFR_TOTAL_DCT_PCT, 0));

                    INSERT INTO ORDER_BOOK(ORDER_ID, ISBN, UNIT_PRICE, QUANTITY) VALUES (O_ID, R.ISBN, U_PRICE, ORDR_QUANTITY);
                    UPDATE BOOKS B2 SET B2.QUANTITY = B2.QUANTITY - ORDR_QUANTITY WHERE B2.ISBN = R.ISBN;

                    UPDATE CARTS CRT2 SET CRT2.QUANTITY = CRT2.QUANTITY - ORDR_QUANTITY WHERE CRT2.CUSTOMER_ID = ARG_CUSTOMER_ID AND CRT2.ISBN = R.ISBN;
                    DELETE FROM CARTS CRT2 WHERE CRT2.CUSTOMER_ID = ARG_CUSTOMER_ID AND CRT2.ISBN = R.ISBN AND CRT2.QUANTITY <= 0;


                END IF;

                END LOOP;
        END IF;
    END;
/

-- ----------------------------
-- Function structure for POST_REVIEW
-- ----------------------------
CREATE OR REPLACE
PROCEDURE "BOOKKEEPER"."POST_REVIEW" AS
BEGIN
	
		SELECT COUNT(*) INTO REVIEW_COUNT
		FROM REVIEWS
		WHERE CUSTOMER_ID = CID AND ISBN = ARG_ISBN;
		
		IF REVIEW_COUNT = 0 THEN
			INSERT INTO REVIEWS (CUSTOMER_ID, ISBN, RATING, FEEDBACK) 
			VALUES (CID, ARG_ISBN, ARG_RATING, ARG_FEEDBACK);
			MSG := 'Review Successfully Added';
		
		ELSE 
			MSG := 'You have already posted a feedback!';
		
		END IF;
		
	EXCEPTION
		WHEN OTHERS THEN 
			MSG:= 'Some Technical Errors Occured. Please Try Again!';
	END;
/

-- ----------------------------
-- Function structure for REMOVE_EXPIRED_SUBSCRIBERS
-- ----------------------------
CREATE OR REPLACE
PROCEDURE "BOOKKEEPER"."REMOVE_EXPIRED_SUBSCRIBERS" AS
BEGIN
		DELETE FROM SUBSCRIBERS WHERE CUSTOMER_ID IN (
				SELECT S.CUSTOMER_ID
				FROM SUBSCRIBERS S
				INNER JOIN PLANS P USING(PLAN_ID)
				WHERE S.MEMBERSHIP_BOUGHT_ON+P.PERIOD < ARG_CURRENT_DATE
				);
	END;
/

-- ----------------------------
-- Function structure for REQUEST_TO_BORROW
-- ----------------------------
CREATE OR REPLACE
FUNCTION "BOOKKEEPER"."REQUEST_TO_BORROW" AS
BEGIN
        REMOVE_EXPIRED_SUBSCRIBERS(ARG_CURRENT_TIME);
        SELECT COUNT(*) INTO CNT_SUBSCRIBERS FROM SUBSCRIBERS WHERE CUSTOMER_ID = ARG_CUSTOMER_ID;
        IF CNT_SUBSCRIBERS = 0 THEN
            RETURN 1;
        END IF;

        SELECT COUNT(*) INTO CNT_BOOK_WITH_SAME_ISBN_IN_REQUESTS
        FROM REQUESTS
        WHERE CUSTOMER_ID =ARG_CUSTOMER_ID
        AND ISBN = ARG_CUSTOMER_ID;

        IF CNT_BOOK_WITH_SAME_ISBN_IN_REQUESTS <> 0 THEN
            RETURN 2;
        END IF;

        SELECT COUNT(*) INTO CNT_BOOK_WITH_SAME_ISBN_IN_BORROWS
        FROM BORROWABLE_ITEMS B_ITEM
        WHERE ISBN = ARG_ISBN
        AND BORROWABLE_ITEM_ID IN (
            SELECT BORROWABLE_ITEM_ID FROM BORROWS WHERE CUSTOMER_ID = ARG_CUSTOMER_ID
            );

        IF CNT_BOOK_WITH_SAME_ISBN_IN_BORROWS <> 0 THEN
            RETURN 3;
        END IF;

        INSERT INTO REQUESTS(CUSTOMER_ID, ISBN) VALUES (ARG_CUSTOMER_ID, ARG_ISBN);
        RETURN 0;
    END;
/

-- ----------------------------
-- Function structure for UPDATE_BOOK_INFO
-- ----------------------------
CREATE OR REPLACE
PROCEDURE "BOOKKEEPER"."UPDATE_BOOK_INFO" AS
BEGIN
		SELECT COUNT(*) INTO CNT_BOOK FROM BOOKS WHERE ISBN=ARG_ISBN;
		SELECT COUNT(*) INTO CNT_AUTHOR FROM AUTHORS WHERE AUTHOR_ID=ARG_AUTHOR_ID;
		SELECT COUNT(*) INTO CNT_PUBLISHER FROM PUBLISHERS WHERE PUBLISHER_ID=ARG_PUBLISHER_ID;
		SELECT COUNT(*) INTO CNT_PK_IN_WRITES FROM WRITES WHERE AUTHOR_ID = ARG_AUTHOR_ID AND ISBN = ARG_ISBN;

		IF CNT_BOOK <> 0 AND CNT_AUTHOR <> 0 AND CNT_PUBLISHER <> 0 THEN
			UPDATE BOOKS
			SET
				NAME = INITCAP(ARG_BOOKNAME),
				EDITION = INITCAP(ARG_EDITION),
				RELEASE_DATE = ARG_RELEASE_DATE,
				PRICE = ARG_PRICE,
				PAGE_COUNT = ARG_PAGE_COUNT,
				QUANTITY = ARG_QUANTITY,
				PUBLISHER_ID = ARG_PUBLISHER_ID
			WHERE ISBN=ARG_ISBN;

			IF CNT_PK_IN_WRITES = 0 THEN
				DELETE FROM WRITES WHERE ISBN = ARG_ISBN;
				INSERT INTO WRITES (AUTHOR_ID, ISBN) VALUES(ARG_AUTHOR_ID, ARG_ISBN);
			END IF;

		END IF;
	END;
/

-- ----------------------------
-- Function structure for UPDATE_OFFER_BOOK_INFO
-- ----------------------------
CREATE OR REPLACE
PROCEDURE "BOOKKEEPER"."UPDATE_OFFER_BOOK_INFO" AS
BEGIN
		SELECT COUNT(*) INTO CNT_OFFER_BOOK FROM OFFER_BOOK WHERE ISBN = ARG_ISBN;
		IF ARG_OFFER_ID IS NULL THEN
			DELETE FROM OFFER_BOOK WHERE ISBN = ARG_ISBN;
			RETURN;
		END IF;

		SELECT COUNT(*) INTO CNT_OFFER FROM OFFERS WHERE OFFER_ID = ARG_OFFER_ID AND START_DATE >= SYSDATE-PERIOD;
		IF CNT_OFFER <> 0 THEN
			IF CNT_OFFER_BOOK = 0 THEN
				INSERT INTO OFFER_BOOK (ISBN, OFFER_ID) VALUES(ARG_ISBN, ARG_OFFER_ID);
			ELSE
				UPDATE OFFER_BOOK SET OFFER_ID = ARG_OFFER_ID WHERE ISBN = ARG_ISBN;
			END IF;

		END IF;



	END;
/

-- ----------------------------
-- Function structure for UPDATE_PERSONAL_INFO
-- ----------------------------
CREATE OR REPLACE
PROCEDURE "BOOKKEEPER"."UPDATE_PERSONAL_INFO" AS
BEGIN
			UPDATE CUSTOMERS
			SET
				NAME = INITCAP(ARG_NAME),
				EMAIL = ARG_EMAIL,
				ADDRESS = INITCAP(ARG_ADDRESS)
			WHERE CUSTOMER_ID=ARG_CID;
	END;
/

-- ----------------------------
-- Sequence structure for AUTHOR_ID_AUTOINCREMENT_SEQ
-- ----------------------------
DROP SEQUENCE "BOOKKEEPER"."AUTHOR_ID_AUTOINCREMENT_SEQ";
CREATE SEQUENCE "BOOKKEEPER"."AUTHOR_ID_AUTOINCREMENT_SEQ" MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 CACHE 20;

-- ----------------------------
-- Sequence structure for ISEQ$$_72951
-- ----------------------------
DROP SEQUENCE "BOOKKEEPER"."ISEQ$$_72951";
CREATE SEQUENCE "BOOKKEEPER"."ISEQ$$_72951" MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 CACHE 20;

-- ----------------------------
-- Sequence structure for ISEQ$$_72982
-- ----------------------------
DROP SEQUENCE "BOOKKEEPER"."ISEQ$$_72982";
CREATE SEQUENCE "BOOKKEEPER"."ISEQ$$_72982" MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 CACHE 20;

-- ----------------------------
-- Sequence structure for ISEQ$$_72987
-- ----------------------------
DROP SEQUENCE "BOOKKEEPER"."ISEQ$$_72987";
CREATE SEQUENCE "BOOKKEEPER"."ISEQ$$_72987" MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 CACHE 20;

-- ----------------------------
-- Sequence structure for ISEQ$$_72992
-- ----------------------------
DROP SEQUENCE "BOOKKEEPER"."ISEQ$$_72992";
CREATE SEQUENCE "BOOKKEEPER"."ISEQ$$_72992" MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 CACHE 20;

-- ----------------------------
-- Sequence structure for ISEQ$$_72997
-- ----------------------------
DROP SEQUENCE "BOOKKEEPER"."ISEQ$$_72997";
CREATE SEQUENCE "BOOKKEEPER"."ISEQ$$_72997" MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 CACHE 20;

-- ----------------------------
-- Sequence structure for ISEQ$$_73009
-- ----------------------------
DROP SEQUENCE "BOOKKEEPER"."ISEQ$$_73009";
CREATE SEQUENCE "BOOKKEEPER"."ISEQ$$_73009" MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 CACHE 20;

-- ----------------------------
-- Sequence structure for ISEQ$$_73012
-- ----------------------------
DROP SEQUENCE "BOOKKEEPER"."ISEQ$$_73012";
CREATE SEQUENCE "BOOKKEEPER"."ISEQ$$_73012" MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 CACHE 20;

-- ----------------------------
-- Sequence structure for ISEQ$$_73084
-- ----------------------------
DROP SEQUENCE "BOOKKEEPER"."ISEQ$$_73084";
CREATE SEQUENCE "BOOKKEEPER"."ISEQ$$_73084" MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 CACHE 20;

-- ----------------------------
-- Sequence structure for ISEQ$$_73087
-- ----------------------------
DROP SEQUENCE "BOOKKEEPER"."ISEQ$$_73087";
CREATE SEQUENCE "BOOKKEEPER"."ISEQ$$_73087" MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 CACHE 20;

-- ----------------------------
-- Sequence structure for ISEQ$$_73091
-- ----------------------------
DROP SEQUENCE "BOOKKEEPER"."ISEQ$$_73091";
CREATE SEQUENCE "BOOKKEEPER"."ISEQ$$_73091" MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 CACHE 20;

-- ----------------------------
-- Sequence structure for ISEQ$$_73094
-- ----------------------------
DROP SEQUENCE "BOOKKEEPER"."ISEQ$$_73094";
CREATE SEQUENCE "BOOKKEEPER"."ISEQ$$_73094" MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 CACHE 20;

-- ----------------------------
-- Sequence structure for ISEQ$$_73098
-- ----------------------------
DROP SEQUENCE "BOOKKEEPER"."ISEQ$$_73098";
CREATE SEQUENCE "BOOKKEEPER"."ISEQ$$_73098" MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 CACHE 20;

-- ----------------------------
-- Sequence structure for ISEQ$$_73101
-- ----------------------------
DROP SEQUENCE "BOOKKEEPER"."ISEQ$$_73101";
CREATE SEQUENCE "BOOKKEEPER"."ISEQ$$_73101" MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 CACHE 20;

-- ----------------------------
-- Sequence structure for ISEQ$$_73105
-- ----------------------------
DROP SEQUENCE "BOOKKEEPER"."ISEQ$$_73105";
CREATE SEQUENCE "BOOKKEEPER"."ISEQ$$_73105" MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 CACHE 20;

-- ----------------------------
-- Sequence structure for ISEQ$$_73108
-- ----------------------------
DROP SEQUENCE "BOOKKEEPER"."ISEQ$$_73108";
CREATE SEQUENCE "BOOKKEEPER"."ISEQ$$_73108" MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 CACHE 20;

-- ----------------------------
-- Sequence structure for ISEQ$$_73122
-- ----------------------------
DROP SEQUENCE "BOOKKEEPER"."ISEQ$$_73122";
CREATE SEQUENCE "BOOKKEEPER"."ISEQ$$_73122" MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 CACHE 20;

-- ----------------------------
-- Sequence structure for ISEQ$$_73230
-- ----------------------------
DROP SEQUENCE "BOOKKEEPER"."ISEQ$$_73230";
CREATE SEQUENCE "BOOKKEEPER"."ISEQ$$_73230" MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 CACHE 20;

-- ----------------------------
-- Sequence structure for ISEQ$$_73233
-- ----------------------------
DROP SEQUENCE "BOOKKEEPER"."ISEQ$$_73233";
CREATE SEQUENCE "BOOKKEEPER"."ISEQ$$_73233" MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 CACHE 20;

-- ----------------------------
-- Sequence structure for ISEQ$$_73269
-- ----------------------------
DROP SEQUENCE "BOOKKEEPER"."ISEQ$$_73269";
CREATE SEQUENCE "BOOKKEEPER"."ISEQ$$_73269" MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 CACHE 20;

-- ----------------------------
-- Sequence structure for ISEQ$$_73274
-- ----------------------------
DROP SEQUENCE "BOOKKEEPER"."ISEQ$$_73274";
CREATE SEQUENCE "BOOKKEEPER"."ISEQ$$_73274" MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 CACHE 20;

-- ----------------------------
-- Sequence structure for ISEQ$$_73279
-- ----------------------------
DROP SEQUENCE "BOOKKEEPER"."ISEQ$$_73279";
CREATE SEQUENCE "BOOKKEEPER"."ISEQ$$_73279" MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 CACHE 20;

-- ----------------------------
-- Sequence structure for ISEQ$$_73284
-- ----------------------------
DROP SEQUENCE "BOOKKEEPER"."ISEQ$$_73284";
CREATE SEQUENCE "BOOKKEEPER"."ISEQ$$_73284" MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 CACHE 20;

-- ----------------------------
-- Sequence structure for ISEQ$$_73296
-- ----------------------------
DROP SEQUENCE "BOOKKEEPER"."ISEQ$$_73296";
CREATE SEQUENCE "BOOKKEEPER"."ISEQ$$_73296" MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 CACHE 20;

-- ----------------------------
-- Sequence structure for ISEQ$$_73299
-- ----------------------------
DROP SEQUENCE "BOOKKEEPER"."ISEQ$$_73299";
CREATE SEQUENCE "BOOKKEEPER"."ISEQ$$_73299" MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 CACHE 20;

-- ----------------------------
-- Sequence structure for ISEQ$$_73467
-- ----------------------------
DROP SEQUENCE "BOOKKEEPER"."ISEQ$$_73467";
CREATE SEQUENCE "BOOKKEEPER"."ISEQ$$_73467" MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 CACHE 20;

-- ----------------------------
-- Sequence structure for ISEQ$$_73470
-- ----------------------------
DROP SEQUENCE "BOOKKEEPER"."ISEQ$$_73470";
CREATE SEQUENCE "BOOKKEEPER"."ISEQ$$_73470" MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 CACHE 20;

-- ----------------------------
-- Sequence structure for ISEQ$$_73561
-- ----------------------------
DROP SEQUENCE "BOOKKEEPER"."ISEQ$$_73561";
CREATE SEQUENCE "BOOKKEEPER"."ISEQ$$_73561" MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 CACHE 20;

-- ----------------------------
-- Sequence structure for ISEQ$$_73564
-- ----------------------------
DROP SEQUENCE "BOOKKEEPER"."ISEQ$$_73564";
CREATE SEQUENCE "BOOKKEEPER"."ISEQ$$_73564" MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 CACHE 20;

-- ----------------------------
-- Sequence structure for ORDER_ID_AUTOINCREMENT_SEQ
-- ----------------------------
DROP SEQUENCE "BOOKKEEPER"."ORDER_ID_AUTOINCREMENT_SEQ";
CREATE SEQUENCE "BOOKKEEPER"."ORDER_ID_AUTOINCREMENT_SEQ" MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 CACHE 20;

-- ----------------------------
-- Sequence structure for PUBLISHER_ID_AUTOINCREMENT_SEQ
-- ----------------------------
DROP SEQUENCE "BOOKKEEPER"."PUBLISHER_ID_AUTOINCREMENT_SEQ";
CREATE SEQUENCE "BOOKKEEPER"."PUBLISHER_ID_AUTOINCREMENT_SEQ" MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 CACHE 20;

-- ----------------------------
-- Primary Key structure for table AUTHORS
-- ----------------------------
ALTER TABLE "BOOKKEEPER"."AUTHORS" ADD CONSTRAINT "SYS_C007830" PRIMARY KEY ("AUTHOR_ID");

-- ----------------------------
-- Checks structure for table AUTHORS
-- ----------------------------
ALTER TABLE "BOOKKEEPER"."AUTHORS" ADD CONSTRAINT "SYS_C007827" CHECK ("AUTHOR_ID" IS NOT NULL) NOT DEFERRABLE INITIALLY IMMEDIATE NORELY VALIDATE;
ALTER TABLE "BOOKKEEPER"."AUTHORS" ADD CONSTRAINT "SYS_C007828" CHECK ("NAME" IS NOT NULL) NOT DEFERRABLE INITIALLY IMMEDIATE NORELY VALIDATE;
ALTER TABLE "BOOKKEEPER"."AUTHORS" ADD CONSTRAINT "SYS_C007829" CHECK (DOD>DOB) NOT DEFERRABLE INITIALLY IMMEDIATE NORELY VALIDATE;

-- ----------------------------
-- Triggers structure for table AUTHORS
-- ----------------------------
CREATE TRIGGER "BOOKKEEPER"."AUTHOR_ID_AUTOINCREMENT" BEFORE INSERT ON "BOOKKEEPER"."AUTHORS" REFERENCING OLD AS "OLD" NEW AS "NEW" FOR EACH ROW 
DECLARE

BEGIN
	IF :NEW.AUTHOR_ID IS NULL THEN
		:NEW.AUTHOR_ID := AUTHOR_ID_AUTOINCREMENT_SEQ.NEXTVAL;
	END IF;


END;
/
CREATE TRIGGER "BOOKKEEPER"."CLEAN_WRITES_FOR_AUTHORS" AFTER DELETE ON "BOOKKEEPER"."AUTHORS" REFERENCING OLD AS "OLD" NEW AS "NEW" FOR EACH ROW 
DECLARE

BEGIN
	DELETE FROM WRITES WHERE AUTHOR_ID = :OLD.AUTHOR_ID;
END;
/

-- ----------------------------
-- Primary Key structure for table AUTH_GROUP
-- ----------------------------
ALTER TABLE "BOOKKEEPER"."AUTH_GROUP" ADD CONSTRAINT "SYS_C007667" PRIMARY KEY ("ID");

-- ----------------------------
-- Uniques structure for table AUTH_GROUP
-- ----------------------------
ALTER TABLE "BOOKKEEPER"."AUTH_GROUP" ADD CONSTRAINT "SYS_C007668" UNIQUE ("NAME") NOT DEFERRABLE INITIALLY IMMEDIATE NORELY VALIDATE;

-- ----------------------------
-- Checks structure for table AUTH_GROUP
-- ----------------------------
ALTER TABLE "BOOKKEEPER"."AUTH_GROUP" ADD CONSTRAINT "SYS_C007666" CHECK ("ID" IS NOT NULL) NOT DEFERRABLE INITIALLY IMMEDIATE NORELY VALIDATE;

-- ----------------------------
-- Primary Key structure for table AUTH_GROUP_PERMISSIONS
-- ----------------------------
ALTER TABLE "BOOKKEEPER"."AUTH_GROUP_PERMISSIONS" ADD CONSTRAINT "SYS_C007672" PRIMARY KEY ("ID");

-- ----------------------------
-- Uniques structure for table AUTH_GROUP_PERMISSIONS
-- ----------------------------
ALTER TABLE "BOOKKEEPER"."AUTH_GROUP_PERMISSIONS" ADD CONSTRAINT "AUTH_GROU_GROUP_ID__0CD325B0_U" UNIQUE ("GROUP_ID", "PERMISSION_ID") NOT DEFERRABLE INITIALLY IMMEDIATE NORELY VALIDATE;

-- ----------------------------
-- Checks structure for table AUTH_GROUP_PERMISSIONS
-- ----------------------------
ALTER TABLE "BOOKKEEPER"."AUTH_GROUP_PERMISSIONS" ADD CONSTRAINT "SYS_C007669" CHECK ("ID" IS NOT NULL) NOT DEFERRABLE INITIALLY IMMEDIATE NORELY VALIDATE;
ALTER TABLE "BOOKKEEPER"."AUTH_GROUP_PERMISSIONS" ADD CONSTRAINT "SYS_C007670" CHECK ("GROUP_ID" IS NOT NULL) NOT DEFERRABLE INITIALLY IMMEDIATE NORELY VALIDATE;
ALTER TABLE "BOOKKEEPER"."AUTH_GROUP_PERMISSIONS" ADD CONSTRAINT "SYS_C007671" CHECK ("PERMISSION_ID" IS NOT NULL) NOT DEFERRABLE INITIALLY IMMEDIATE NORELY VALIDATE;

-- ----------------------------
-- Indexes structure for table AUTH_GROUP_PERMISSIONS
-- ----------------------------
CREATE INDEX "BOOKKEEPER"."AUTH_GROUP_GROUP_ID_B120CBF9"
  ON "BOOKKEEPER"."AUTH_GROUP_PERMISSIONS" ("GROUP_ID" ASC)
  LOGGING
  VISIBLE
PCTFREE 10
INITRANS 2
STORAGE (
  BUFFER_POOL DEFAULT
  FLASH_CACHE DEFAULT
)
   USABLE;
CREATE INDEX "BOOKKEEPER"."AUTH_GROUP_PERMISSION_84C5C92E"
  ON "BOOKKEEPER"."AUTH_GROUP_PERMISSIONS" ("PERMISSION_ID" ASC)
  LOGGING
  VISIBLE
PCTFREE 10
INITRANS 2
STORAGE (
  BUFFER_POOL DEFAULT
  FLASH_CACHE DEFAULT
)
   USABLE;

-- ----------------------------
-- Primary Key structure for table AUTH_PERMISSION
-- ----------------------------
ALTER TABLE "BOOKKEEPER"."AUTH_PERMISSION" ADD CONSTRAINT "SYS_C007665" PRIMARY KEY ("ID");

-- ----------------------------
-- Uniques structure for table AUTH_PERMISSION
-- ----------------------------
ALTER TABLE "BOOKKEEPER"."AUTH_PERMISSION" ADD CONSTRAINT "AUTH_PERM_CONTENT_T_01AB375A_U" UNIQUE ("CONTENT_TYPE_ID", "CODENAME") NOT DEFERRABLE INITIALLY IMMEDIATE NORELY VALIDATE;

-- ----------------------------
-- Checks structure for table AUTH_PERMISSION
-- ----------------------------
ALTER TABLE "BOOKKEEPER"."AUTH_PERMISSION" ADD CONSTRAINT "SYS_C007663" CHECK ("ID" IS NOT NULL) NOT DEFERRABLE INITIALLY IMMEDIATE NORELY VALIDATE;
ALTER TABLE "BOOKKEEPER"."AUTH_PERMISSION" ADD CONSTRAINT "SYS_C007664" CHECK ("CONTENT_TYPE_ID" IS NOT NULL) NOT DEFERRABLE INITIALLY IMMEDIATE NORELY VALIDATE;

-- ----------------------------
-- Indexes structure for table AUTH_PERMISSION
-- ----------------------------
CREATE INDEX "BOOKKEEPER"."AUTH_PERMI_CONTENT_TY_2F476E4B"
  ON "BOOKKEEPER"."AUTH_PERMISSION" ("CONTENT_TYPE_ID" ASC)
  LOGGING
  VISIBLE
PCTFREE 10
INITRANS 2
STORAGE (
  INITIAL 65536 
  NEXT 1048576 
  MINEXTENTS 1
  MAXEXTENTS 2147483645
  BUFFER_POOL DEFAULT
  FLASH_CACHE DEFAULT
)
   USABLE;

-- ----------------------------
-- Primary Key structure for table AUTH_USER
-- ----------------------------
ALTER TABLE "BOOKKEEPER"."AUTH_USER" ADD CONSTRAINT "SYS_C007682" PRIMARY KEY ("ID");

-- ----------------------------
-- Uniques structure for table AUTH_USER
-- ----------------------------
ALTER TABLE "BOOKKEEPER"."AUTH_USER" ADD CONSTRAINT "SYS_C007683" UNIQUE ("USERNAME") NOT DEFERRABLE INITIALLY IMMEDIATE NORELY VALIDATE;

-- ----------------------------
-- Checks structure for table AUTH_USER
-- ----------------------------
ALTER TABLE "BOOKKEEPER"."AUTH_USER" ADD CONSTRAINT "SYS_C007673" CHECK ("ID" IS NOT NULL) NOT DEFERRABLE INITIALLY IMMEDIATE NORELY VALIDATE;
ALTER TABLE "BOOKKEEPER"."AUTH_USER" ADD CONSTRAINT "SYS_C007675" CHECK ("IS_SUPERUSER" IS NOT NULL) NOT DEFERRABLE INITIALLY IMMEDIATE NORELY VALIDATE;
ALTER TABLE "BOOKKEEPER"."AUTH_USER" ADD CONSTRAINT "SYS_C007676" CHECK ("IS_STAFF" IS NOT NULL) NOT DEFERRABLE INITIALLY IMMEDIATE NORELY VALIDATE;
ALTER TABLE "BOOKKEEPER"."AUTH_USER" ADD CONSTRAINT "SYS_C007677" CHECK ("IS_ACTIVE" IS NOT NULL) NOT DEFERRABLE INITIALLY IMMEDIATE NORELY VALIDATE;
ALTER TABLE "BOOKKEEPER"."AUTH_USER" ADD CONSTRAINT "SYS_C007678" CHECK ("DATE_JOINED" IS NOT NULL) NOT DEFERRABLE INITIALLY IMMEDIATE NORELY VALIDATE;
ALTER TABLE "BOOKKEEPER"."AUTH_USER" ADD CONSTRAINT "SYS_C007679" CHECK ("IS_SUPERUSER" IN (0,1)) NOT DEFERRABLE INITIALLY IMMEDIATE NORELY VALIDATE;
ALTER TABLE "BOOKKEEPER"."AUTH_USER" ADD CONSTRAINT "SYS_C007680" CHECK ("IS_STAFF" IN (0,1)) NOT DEFERRABLE INITIALLY IMMEDIATE NORELY VALIDATE;
ALTER TABLE "BOOKKEEPER"."AUTH_USER" ADD CONSTRAINT "SYS_C007681" CHECK ("IS_ACTIVE" IN (0,1)) NOT DEFERRABLE INITIALLY IMMEDIATE NORELY VALIDATE;

-- ----------------------------
-- Primary Key structure for table AUTH_USER_GROUPS
-- ----------------------------
ALTER TABLE "BOOKKEEPER"."AUTH_USER_GROUPS" ADD CONSTRAINT "SYS_C007687" PRIMARY KEY ("ID");

-- ----------------------------
-- Uniques structure for table AUTH_USER_GROUPS
-- ----------------------------
ALTER TABLE "BOOKKEEPER"."AUTH_USER_GROUPS" ADD CONSTRAINT "AUTH_USER_USER_ID_G_94350C0C_U" UNIQUE ("USER_ID", "GROUP_ID") NOT DEFERRABLE INITIALLY IMMEDIATE NORELY VALIDATE;

-- ----------------------------
-- Checks structure for table AUTH_USER_GROUPS
-- ----------------------------
ALTER TABLE "BOOKKEEPER"."AUTH_USER_GROUPS" ADD CONSTRAINT "SYS_C007684" CHECK ("ID" IS NOT NULL) NOT DEFERRABLE INITIALLY IMMEDIATE NORELY VALIDATE;
ALTER TABLE "BOOKKEEPER"."AUTH_USER_GROUPS" ADD CONSTRAINT "SYS_C007685" CHECK ("USER_ID" IS NOT NULL) NOT DEFERRABLE INITIALLY IMMEDIATE NORELY VALIDATE;
ALTER TABLE "BOOKKEEPER"."AUTH_USER_GROUPS" ADD CONSTRAINT "SYS_C007686" CHECK ("GROUP_ID" IS NOT NULL) NOT DEFERRABLE INITIALLY IMMEDIATE NORELY VALIDATE;

-- ----------------------------
-- Indexes structure for table AUTH_USER_GROUPS
-- ----------------------------
CREATE INDEX "BOOKKEEPER"."AUTH_USER__GROUP_ID_97559544"
  ON "BOOKKEEPER"."AUTH_USER_GROUPS" ("GROUP_ID" ASC)
  LOGGING
  VISIBLE
PCTFREE 10
INITRANS 2
STORAGE (
  BUFFER_POOL DEFAULT
  FLASH_CACHE DEFAULT
)
   USABLE;
CREATE INDEX "BOOKKEEPER"."AUTH_USER__USER_ID_6A12ED8B"
  ON "BOOKKEEPER"."AUTH_USER_GROUPS" ("USER_ID" ASC)
  LOGGING
  VISIBLE
PCTFREE 10
INITRANS 2
STORAGE (
  BUFFER_POOL DEFAULT
  FLASH_CACHE DEFAULT
)
   USABLE;

-- ----------------------------
-- Primary Key structure for table AUTH_USER_USER_PERMISSIONS
-- ----------------------------
ALTER TABLE "BOOKKEEPER"."AUTH_USER_USER_PERMISSIONS" ADD CONSTRAINT "SYS_C007691" PRIMARY KEY ("ID");

-- ----------------------------
-- Uniques structure for table AUTH_USER_USER_PERMISSIONS
-- ----------------------------
ALTER TABLE "BOOKKEEPER"."AUTH_USER_USER_PERMISSIONS" ADD CONSTRAINT "AUTH_USER_USER_ID_P_14A6B632_U" UNIQUE ("USER_ID", "PERMISSION_ID") NOT DEFERRABLE INITIALLY IMMEDIATE NORELY VALIDATE;

-- ----------------------------
-- Checks structure for table AUTH_USER_USER_PERMISSIONS
-- ----------------------------
ALTER TABLE "BOOKKEEPER"."AUTH_USER_USER_PERMISSIONS" ADD CONSTRAINT "SYS_C007688" CHECK ("ID" IS NOT NULL) NOT DEFERRABLE INITIALLY IMMEDIATE NORELY VALIDATE;
ALTER TABLE "BOOKKEEPER"."AUTH_USER_USER_PERMISSIONS" ADD CONSTRAINT "SYS_C007689" CHECK ("USER_ID" IS NOT NULL) NOT DEFERRABLE INITIALLY IMMEDIATE NORELY VALIDATE;
ALTER TABLE "BOOKKEEPER"."AUTH_USER_USER_PERMISSIONS" ADD CONSTRAINT "SYS_C007690" CHECK ("PERMISSION_ID" IS NOT NULL) NOT DEFERRABLE INITIALLY IMMEDIATE NORELY VALIDATE;

-- ----------------------------
-- Indexes structure for table AUTH_USER_USER_PERMISSIONS
-- ----------------------------
CREATE INDEX "BOOKKEEPER"."AUTH_USER__PERMISSION_1FBB5F2C"
  ON "BOOKKEEPER"."AUTH_USER_USER_PERMISSIONS" ("PERMISSION_ID" ASC)
  LOGGING
  VISIBLE
PCTFREE 10
INITRANS 2
STORAGE (
  BUFFER_POOL DEFAULT
  FLASH_CACHE DEFAULT
)
   USABLE;
CREATE INDEX "BOOKKEEPER"."AUTH_USER__USER_ID_A95EAD1B"
  ON "BOOKKEEPER"."AUTH_USER_USER_PERMISSIONS" ("USER_ID" ASC)
  LOGGING
  VISIBLE
PCTFREE 10
INITRANS 2
STORAGE (
  BUFFER_POOL DEFAULT
  FLASH_CACHE DEFAULT
)
   USABLE;

-- ----------------------------
-- Primary Key structure for table BOOKS
-- ----------------------------
ALTER TABLE "BOOKKEEPER"."BOOKS" ADD CONSTRAINT "SYS_C007821" PRIMARY KEY ("ISBN");

-- ----------------------------
-- Checks structure for table BOOKS
-- ----------------------------
ALTER TABLE "BOOKKEEPER"."BOOKS" ADD CONSTRAINT "SYS_C007817" CHECK ("ISBN" IS NOT NULL) NOT DEFERRABLE INITIALLY IMMEDIATE NORELY VALIDATE;
ALTER TABLE "BOOKKEEPER"."BOOKS" ADD CONSTRAINT "SYS_C007818" CHECK ("NAME" IS NOT NULL) NOT DEFERRABLE INITIALLY IMMEDIATE NORELY VALIDATE;
ALTER TABLE "BOOKKEEPER"."BOOKS" ADD CONSTRAINT "SYS_C007819" CHECK ("PRICE" IS NOT NULL) NOT DEFERRABLE INITIALLY IMMEDIATE NORELY VALIDATE;
ALTER TABLE "BOOKKEEPER"."BOOKS" ADD CONSTRAINT "SYS_C007820" CHECK ("QUANTITY" IS NOT NULL) NOT DEFERRABLE INITIALLY IMMEDIATE NORELY VALIDATE;

-- ----------------------------
-- Primary Key structure for table BOOK_TYPE
-- ----------------------------
ALTER TABLE "BOOKKEEPER"."BOOK_TYPE" ADD CONSTRAINT "SYS_C007822" PRIMARY KEY ("ISBN", "B_TYPE");

-- ----------------------------
-- Primary Key structure for table BORROWABLE_ITEMS
-- ----------------------------
ALTER TABLE "BOOKKEEPER"."BORROWABLE_ITEMS" ADD CONSTRAINT "SYS_C007837" PRIMARY KEY ("BORROWABLE_ITEM_ID");

-- ----------------------------
-- Checks structure for table BORROWABLE_ITEMS
-- ----------------------------
ALTER TABLE "BOOKKEEPER"."BORROWABLE_ITEMS" ADD CONSTRAINT "SYS_C007836" CHECK ("BORROWABLE_ITEM_ID" IS NOT NULL) NOT DEFERRABLE INITIALLY IMMEDIATE NORELY VALIDATE;

-- ----------------------------
-- Triggers structure for table BORROWABLE_ITEMS
-- ----------------------------
CREATE TRIGGER "BOOKKEEPER"."DECREASE_BOOK_QUANTITY_ON_BORROWABLE_INSERT" AFTER INSERT ON "BOOKKEEPER"."BORROWABLE_ITEMS" REFERENCING OLD AS "OLD" NEW AS "NEW" FOR EACH ROW 
DECLARE
        V_QUANTITY NUMBER;
    BEGIN
        SELECT QUANTITY INTO V_QUANTITY FROM BOOKS WHERE ISBN = :NEW.ISBN;
        IF V_QUANTITY > 0 THEN
            UPDATE BOOKS SET QUANTITY = QUANTITY - 1 WHERE ISBN = :NEW.ISBN;
        END IF;

        EXCEPTION
            WHEN NO_DATA_FOUND THEN
                DBMS_OUTPUT.PUT_LINE('BOOK NOT AVAILABLE');
    END;
/

-- ----------------------------
-- Primary Key structure for table BORROWS
-- ----------------------------
ALTER TABLE "BOOKKEEPER"."BORROWS" ADD CONSTRAINT "SYS_C007838" PRIMARY KEY ("BORROWABLE_ITEM_ID", "CUSTOMER_ID");

-- ----------------------------
-- Triggers structure for table BORROWS
-- ----------------------------
CREATE TRIGGER "BOOKKEEPER"."CLEAN_REQUESTS_ON_ACCEPT_BORROW_REQUEST" AFTER INSERT ON "BOOKKEEPER"."BORROWS" REFERENCING OLD AS "OLD" NEW AS "NEW" FOR EACH ROW 
DECLARE
		V_ISBN VARCHAR2(16);
	BEGIN
		SELECT ISBN INTO V_ISBN FROM BORROWABLE_ITEMS WHERE BORROWABLE_ITEM_ID = :NEW.BORROWABLE_ITEM_ID;
		DELETE FROM REQUESTS WHERE CUSTOMER_ID = :NEW.CUSTOMER_ID AND ISBN = V_ISBN;
	END;
/

-- ----------------------------
-- Primary Key structure for table CARTS
-- ----------------------------
ALTER TABLE "BOOKKEEPER"."CARTS" ADD CONSTRAINT "SYS_C007853" PRIMARY KEY ("CUSTOMER_ID", "ISBN");

-- ----------------------------
-- Primary Key structure for table CUSTOMERS
-- ----------------------------
ALTER TABLE "BOOKKEEPER"."CUSTOMERS" ADD CONSTRAINT "SYS_C007841" PRIMARY KEY ("CUSTOMER_ID");

-- ----------------------------
-- Uniques structure for table CUSTOMERS
-- ----------------------------
ALTER TABLE "BOOKKEEPER"."CUSTOMERS" ADD CONSTRAINT "SYS_C007842" UNIQUE ("EMAIL") NOT DEFERRABLE INITIALLY IMMEDIATE NORELY VALIDATE;

-- ----------------------------
-- Checks structure for table CUSTOMERS
-- ----------------------------
ALTER TABLE "BOOKKEEPER"."CUSTOMERS" ADD CONSTRAINT "SYS_C007839" CHECK ("NAME" IS NOT NULL) NOT DEFERRABLE INITIALLY IMMEDIATE NORELY VALIDATE;
ALTER TABLE "BOOKKEEPER"."CUSTOMERS" ADD CONSTRAINT "SYS_C007840" CHECK ("EMAIL" IS NOT NULL) NOT DEFERRABLE INITIALLY IMMEDIATE NORELY VALIDATE;
ALTER TABLE "BOOKKEEPER"."CUSTOMERS" ADD CONSTRAINT "SYS_C007879" CHECK ("PASSWORD" IS NOT NULL) NOT DEFERRABLE INITIALLY IMMEDIATE NORELY VALIDATE;

-- ----------------------------
-- Primary Key structure for table CUSTOMER_CONTACT_NUMBER
-- ----------------------------
ALTER TABLE "BOOKKEEPER"."CUSTOMER_CONTACT_NUMBER" ADD CONSTRAINT "SYS_C007843" PRIMARY KEY ("CUSTOMER_ID", "CONTACT_NUMBER");

-- ----------------------------
-- Primary Key structure for table DJANGO_ADMIN_LOG
-- ----------------------------
ALTER TABLE "BOOKKEEPER"."DJANGO_ADMIN_LOG" ADD CONSTRAINT "SYS_C007708" PRIMARY KEY ("ID");

-- ----------------------------
-- Checks structure for table DJANGO_ADMIN_LOG
-- ----------------------------
ALTER TABLE "BOOKKEEPER"."DJANGO_ADMIN_LOG" ADD CONSTRAINT "SYS_C007703" CHECK ("ID" IS NOT NULL) NOT DEFERRABLE INITIALLY IMMEDIATE NORELY VALIDATE;
ALTER TABLE "BOOKKEEPER"."DJANGO_ADMIN_LOG" ADD CONSTRAINT "SYS_C007704" CHECK ("ACTION_TIME" IS NOT NULL) NOT DEFERRABLE INITIALLY IMMEDIATE NORELY VALIDATE;
ALTER TABLE "BOOKKEEPER"."DJANGO_ADMIN_LOG" ADD CONSTRAINT "SYS_C007705" CHECK ("ACTION_FLAG" IS NOT NULL) NOT DEFERRABLE INITIALLY IMMEDIATE NORELY VALIDATE;
ALTER TABLE "BOOKKEEPER"."DJANGO_ADMIN_LOG" ADD CONSTRAINT "SYS_C007706" CHECK ("USER_ID" IS NOT NULL) NOT DEFERRABLE INITIALLY IMMEDIATE NORELY VALIDATE;
ALTER TABLE "BOOKKEEPER"."DJANGO_ADMIN_LOG" ADD CONSTRAINT "SYS_C007707" CHECK ("ACTION_FLAG" >= 0) NOT DEFERRABLE INITIALLY IMMEDIATE NORELY VALIDATE;

-- ----------------------------
-- Indexes structure for table DJANGO_ADMIN_LOG
-- ----------------------------
CREATE INDEX "BOOKKEEPER"."DJANGO_ADM_CONTENT_TY_C4BCE8EB"
  ON "BOOKKEEPER"."DJANGO_ADMIN_LOG" ("CONTENT_TYPE_ID" ASC)
  LOGGING
  VISIBLE
PCTFREE 10
INITRANS 2
STORAGE (
  BUFFER_POOL DEFAULT
  FLASH_CACHE DEFAULT
)
   USABLE;
CREATE INDEX "BOOKKEEPER"."DJANGO_ADM_USER_ID_C564EBA6"
  ON "BOOKKEEPER"."DJANGO_ADMIN_LOG" ("USER_ID" ASC)
  LOGGING
  VISIBLE
PCTFREE 10
INITRANS 2
STORAGE (
  BUFFER_POOL DEFAULT
  FLASH_CACHE DEFAULT
)
   USABLE;

-- ----------------------------
-- Primary Key structure for table DJANGO_CONTENT_TYPE
-- ----------------------------
ALTER TABLE "BOOKKEEPER"."DJANGO_CONTENT_TYPE" ADD CONSTRAINT "SYS_C007661" PRIMARY KEY ("ID");

-- ----------------------------
-- Uniques structure for table DJANGO_CONTENT_TYPE
-- ----------------------------
ALTER TABLE "BOOKKEEPER"."DJANGO_CONTENT_TYPE" ADD CONSTRAINT "DJANGO_CO_APP_LABEL_76BD3D3B_U" UNIQUE ("APP_LABEL", "MODEL") NOT DEFERRABLE INITIALLY IMMEDIATE NORELY VALIDATE;

-- ----------------------------
-- Checks structure for table DJANGO_CONTENT_TYPE
-- ----------------------------
ALTER TABLE "BOOKKEEPER"."DJANGO_CONTENT_TYPE" ADD CONSTRAINT "SYS_C007660" CHECK ("ID" IS NOT NULL) NOT DEFERRABLE INITIALLY IMMEDIATE NORELY VALIDATE;

-- ----------------------------
-- Primary Key structure for table DJANGO_MIGRATIONS
-- ----------------------------
ALTER TABLE "BOOKKEEPER"."DJANGO_MIGRATIONS" ADD CONSTRAINT "SYS_C007659" PRIMARY KEY ("ID");

-- ----------------------------
-- Checks structure for table DJANGO_MIGRATIONS
-- ----------------------------
ALTER TABLE "BOOKKEEPER"."DJANGO_MIGRATIONS" ADD CONSTRAINT "SYS_C007657" CHECK ("ID" IS NOT NULL) NOT DEFERRABLE INITIALLY IMMEDIATE NORELY VALIDATE;
ALTER TABLE "BOOKKEEPER"."DJANGO_MIGRATIONS" ADD CONSTRAINT "SYS_C007658" CHECK ("APPLIED" IS NOT NULL) NOT DEFERRABLE INITIALLY IMMEDIATE NORELY VALIDATE;

-- ----------------------------
-- Primary Key structure for table DJANGO_SESSION
-- ----------------------------
ALTER TABLE "BOOKKEEPER"."DJANGO_SESSION" ADD CONSTRAINT "SYS_C007713" PRIMARY KEY ("SESSION_KEY");

-- ----------------------------
-- Checks structure for table DJANGO_SESSION
-- ----------------------------
ALTER TABLE "BOOKKEEPER"."DJANGO_SESSION" ADD CONSTRAINT "SYS_C007711" CHECK ("SESSION_KEY" IS NOT NULL) NOT DEFERRABLE INITIALLY IMMEDIATE NORELY VALIDATE;
ALTER TABLE "BOOKKEEPER"."DJANGO_SESSION" ADD CONSTRAINT "SYS_C007712" CHECK ("EXPIRE_DATE" IS NOT NULL) NOT DEFERRABLE INITIALLY IMMEDIATE NORELY VALIDATE;

-- ----------------------------
-- Indexes structure for table DJANGO_SESSION
-- ----------------------------
CREATE INDEX "BOOKKEEPER"."DJANGO_SES_EXPIRE_DAT_A5C62663"
  ON "BOOKKEEPER"."DJANGO_SESSION" ("EXPIRE_DATE" ASC)
  LOGGING
  VISIBLE
PCTFREE 10
INITRANS 2
STORAGE (
  INITIAL 65536 
  NEXT 1048576 
  MINEXTENTS 1
  MAXEXTENTS 2147483645
  BUFFER_POOL DEFAULT
  FLASH_CACHE DEFAULT
)
   USABLE;

-- ----------------------------
-- Primary Key structure for table EXPIRED
-- ----------------------------
ALTER TABLE "BOOKKEEPER"."EXPIRED" ADD CONSTRAINT "SYS_C008011" PRIMARY KEY ("EXPIRED_ID");

-- ----------------------------
-- Checks structure for table EXPIRED
-- ----------------------------
ALTER TABLE "BOOKKEEPER"."EXPIRED" ADD CONSTRAINT "SYS_C008010" CHECK ("EXPIRED_ID" IS NOT NULL) NOT DEFERRABLE INITIALLY IMMEDIATE NORELY VALIDATE;

-- ----------------------------
-- Primary Key structure for table MANAGERS
-- ----------------------------
ALTER TABLE "BOOKKEEPER"."MANAGERS" ADD CONSTRAINT "SYS_C007949" PRIMARY KEY ("ADMIN_ID");

-- ----------------------------
-- Checks structure for table MANAGERS
-- ----------------------------
ALTER TABLE "BOOKKEEPER"."MANAGERS" ADD CONSTRAINT "SYS_C007948" CHECK ("PASSWORD" IS NOT NULL) NOT DEFERRABLE INITIALLY IMMEDIATE NORELY VALIDATE;

-- ----------------------------
-- Primary Key structure for table OFFERS
-- ----------------------------
ALTER TABLE "BOOKKEEPER"."OFFERS" ADD CONSTRAINT "SYS_C007834" PRIMARY KEY ("OFFER_ID");

-- ----------------------------
-- Checks structure for table OFFERS
-- ----------------------------
ALTER TABLE "BOOKKEEPER"."OFFERS" ADD CONSTRAINT "SYS_C007832" CHECK ("OFFER_ID" IS NOT NULL) NOT DEFERRABLE INITIALLY IMMEDIATE NORELY VALIDATE;
ALTER TABLE "BOOKKEEPER"."OFFERS" ADD CONSTRAINT "SYS_C007833" CHECK ("NAME" IS NOT NULL) NOT DEFERRABLE INITIALLY IMMEDIATE NORELY VALIDATE;

-- ----------------------------
-- Triggers structure for table OFFERS
-- ----------------------------
CREATE TRIGGER "BOOKKEEPER"."CLEAN_OFFER_BOOK_FOR_OFFERS" AFTER DELETE ON "BOOKKEEPER"."OFFERS" REFERENCING OLD AS "OLD" NEW AS "NEW" FOR EACH ROW 
DECLARE
	BEGIN
		DELETE FROM OFFER_BOOK WHERE OFFER_ID = :OLD.OFFER_ID;
	END;
/

-- ----------------------------
-- Primary Key structure for table OFFER_BOOK
-- ----------------------------
ALTER TABLE "BOOKKEEPER"."OFFER_BOOK" ADD CONSTRAINT "SYS_C007835" PRIMARY KEY ("ISBN");

-- ----------------------------
-- Primary Key structure for table ORDERS
-- ----------------------------
ALTER TABLE "BOOKKEEPER"."ORDERS" ADD CONSTRAINT "SYS_C007849" PRIMARY KEY ("ORDER_ID");

-- ----------------------------
-- Checks structure for table ORDERS
-- ----------------------------
ALTER TABLE "BOOKKEEPER"."ORDERS" ADD CONSTRAINT "SYS_C007848" CHECK ("ORDER_ID" IS NOT NULL) NOT DEFERRABLE INITIALLY IMMEDIATE NORELY VALIDATE;

-- ----------------------------
-- Primary Key structure for table ORDER_BOOK
-- ----------------------------
ALTER TABLE "BOOKKEEPER"."ORDER_BOOK" ADD CONSTRAINT "SYS_C007850" PRIMARY KEY ("ORDER_ID", "ISBN");

-- ----------------------------
-- Primary Key structure for table PLANS
-- ----------------------------
ALTER TABLE "BOOKKEEPER"."PLANS" ADD CONSTRAINT "SYS_C007971" PRIMARY KEY ("PLAN_ID");

-- ----------------------------
-- Checks structure for table PLANS
-- ----------------------------
ALTER TABLE "BOOKKEEPER"."PLANS" ADD CONSTRAINT "SYS_C007969" CHECK ("PLAN_ID" IS NOT NULL) NOT DEFERRABLE INITIALLY IMMEDIATE NORELY VALIDATE;
ALTER TABLE "BOOKKEEPER"."PLANS" ADD CONSTRAINT "SYS_C007970" CHECK ("NAME" IS NOT NULL) NOT DEFERRABLE INITIALLY IMMEDIATE NORELY VALIDATE;

-- ----------------------------
-- Primary Key structure for table PUBLISHERS
-- ----------------------------
ALTER TABLE "BOOKKEEPER"."PUBLISHERS" ADD CONSTRAINT "SYS_C007825" PRIMARY KEY ("PUBLISHER_ID");

-- ----------------------------
-- Checks structure for table PUBLISHERS
-- ----------------------------
ALTER TABLE "BOOKKEEPER"."PUBLISHERS" ADD CONSTRAINT "SYS_C007823" CHECK ("PUBLISHER_ID" IS NOT NULL) NOT DEFERRABLE INITIALLY IMMEDIATE NORELY VALIDATE;
ALTER TABLE "BOOKKEEPER"."PUBLISHERS" ADD CONSTRAINT "SYS_C007824" CHECK ("NAME" IS NOT NULL) NOT DEFERRABLE INITIALLY IMMEDIATE NORELY VALIDATE;

-- ----------------------------
-- Triggers structure for table PUBLISHERS
-- ----------------------------
CREATE TRIGGER "BOOKKEEPER"."CLEAN_PUBLISHER_CONTACT_NUMBER_FOR_PUBLISHERS" AFTER DELETE ON "BOOKKEEPER"."PUBLISHERS" REFERENCING OLD AS "OLD" NEW AS "NEW" FOR EACH ROW 
DECLARE
	BEGIN
		DELETE FROM PUBLISHER_CONTACT_NUMBER WHERE PUBLISHER_ID = :OLD.PUBLISHER_ID;
	END;
/

-- ----------------------------
-- Primary Key structure for table PUBLISHER_CONTACT_NUMBER
-- ----------------------------
ALTER TABLE "BOOKKEEPER"."PUBLISHER_CONTACT_NUMBER" ADD CONSTRAINT "SYS_C007826" PRIMARY KEY ("PUBLISHER_ID", "CONTACT_NUMBER");

-- ----------------------------
-- Primary Key structure for table REQUESTS
-- ----------------------------
ALTER TABLE "BOOKKEEPER"."REQUESTS" ADD CONSTRAINT "SYS_C007854" PRIMARY KEY ("CUSTOMER_ID", "ISBN");

-- ----------------------------
-- Primary Key structure for table REVIEWS
-- ----------------------------
ALTER TABLE "BOOKKEEPER"."REVIEWS" ADD CONSTRAINT "SYS_C007852" PRIMARY KEY ("CUSTOMER_ID", "ISBN");

-- ----------------------------
-- Primary Key structure for table SUBSCRIBERS
-- ----------------------------
ALTER TABLE "BOOKKEEPER"."SUBSCRIBERS" ADD CONSTRAINT "SYS_C007844" PRIMARY KEY ("CUSTOMER_ID");

-- ----------------------------
-- Triggers structure for table SUBSCRIBERS
-- ----------------------------
CREATE TRIGGER "BOOKKEEPER"."CLEAN_BORROWS_AND_REQUESTS_FOR_SUBSCRIBERS" AFTER DELETE ON "BOOKKEEPER"."SUBSCRIBERS" REFERENCING OLD AS "OLD" NEW AS "NEW" FOR EACH ROW 
DECLARE
	ARG_ISSUE_DATE DATE;
	BEGIN
		DELETE FROM REQUESTS WHERE CUSTOMER_ID = :OLD.CUSTOMER_ID;
		SELECT (:OLD.MEMBERSHIP_BOUGHT_ON+P.PERIOD) INTO ARG_ISSUE_DATE FROM PLANS P WHERE PLAN_ID = :OLD.PLAN_ID;
		FOR R IN (
				SELECT * FROM BORROWS WHERE CUSTOMER_ID = :OLD.CUSTOMER_ID AND END_DATE IS NULL
							)
			LOOP
				INSERT INTO EXPIRED(CUSTOMER_ID, BORROWABLE_ITEM_ID, ISSUE_DATE) VALUES(R.CUSTOMER_ID, R.BORROWABLE_ITEM_ID, ARG_ISSUE_DATE);
			END LOOP;
		DELETE FROM BORROWS WHERE CUSTOMER_ID=:OLD.CUSTOMER_ID;
	END;
/

-- ----------------------------
-- Primary Key structure for table WISHLISTS
-- ----------------------------
ALTER TABLE "BOOKKEEPER"."WISHLISTS" ADD CONSTRAINT "SYS_C007851" PRIMARY KEY ("CUSTOMER_ID", "ISBN");

-- ----------------------------
-- Primary Key structure for table WRITES
-- ----------------------------
ALTER TABLE "BOOKKEEPER"."WRITES" ADD CONSTRAINT "SYS_C007831" PRIMARY KEY ("AUTHOR_ID", "ISBN");

-- ----------------------------
-- Foreign Keys structure for table AUTH_GROUP_PERMISSIONS
-- ----------------------------

-- ----------------------------
-- Foreign Keys structure for table AUTH_PERMISSION
-- ----------------------------

-- ----------------------------
-- Foreign Keys structure for table AUTH_USER_GROUPS
-- ----------------------------

-- ----------------------------
-- Foreign Keys structure for table AUTH_USER_USER_PERMISSIONS
-- ----------------------------

-- ----------------------------
-- Foreign Keys structure for table BOOKS
-- ----------------------------
ALTER TABLE "BOOKKEEPER"."BOOKS" ADD CONSTRAINT "BOOKS__PUBLISHER_FK" FOREIGN KEY ("PUBLISHER_ID") REFERENCES "BOOKKEEPER"."PUBLISHERS" ("PUBLISHER_ID") NOT DEFERRABLE INITIALLY IMMEDIATE NORELY VALIDATE;

-- ----------------------------
-- Foreign Keys structure for table BOOK_TYPE
-- ----------------------------
ALTER TABLE "BOOKKEEPER"."BOOK_TYPE" ADD CONSTRAINT "BOOK_TYPE__BOOKS" FOREIGN KEY ("ISBN") REFERENCES "BOOKKEEPER"."BOOKS" ("ISBN") NOT DEFERRABLE INITIALLY IMMEDIATE NORELY VALIDATE;

-- ----------------------------
-- Foreign Keys structure for table BORROWABLE_ITEMS
-- ----------------------------
ALTER TABLE "BOOKKEEPER"."BORROWABLE_ITEMS" ADD CONSTRAINT "BORROWABLE_ITEMS__BOOKS_FK" FOREIGN KEY ("ISBN") REFERENCES "BOOKKEEPER"."BOOKS" ("ISBN") NOT DEFERRABLE INITIALLY IMMEDIATE NORELY VALIDATE;

-- ----------------------------
-- Foreign Keys structure for table BORROWS
-- ----------------------------
ALTER TABLE "BOOKKEEPER"."BORROWS" ADD CONSTRAINT "BORROWS__BORROWABLE_ITEMS_FK" FOREIGN KEY ("BORROWABLE_ITEM_ID") REFERENCES "BOOKKEEPER"."BORROWABLE_ITEMS" ("BORROWABLE_ITEM_ID") NOT DEFERRABLE INITIALLY IMMEDIATE NORELY VALIDATE;
ALTER TABLE "BOOKKEEPER"."BORROWS" ADD CONSTRAINT "BORROWS__SUBSCRIBERS_FK" FOREIGN KEY ("CUSTOMER_ID") REFERENCES "BOOKKEEPER"."SUBSCRIBERS" ("CUSTOMER_ID") NOT DEFERRABLE INITIALLY IMMEDIATE NORELY VALIDATE;

-- ----------------------------
-- Foreign Keys structure for table CARTS
-- ----------------------------
ALTER TABLE "BOOKKEEPER"."CARTS" ADD CONSTRAINT "CARTS__BOOKS_FK" FOREIGN KEY ("ISBN") REFERENCES "BOOKKEEPER"."BOOKS" ("ISBN") NOT DEFERRABLE INITIALLY IMMEDIATE NORELY VALIDATE;
ALTER TABLE "BOOKKEEPER"."CARTS" ADD CONSTRAINT "CARTS__CUSTOMERS_FK" FOREIGN KEY ("CUSTOMER_ID") REFERENCES "BOOKKEEPER"."CUSTOMERS" ("CUSTOMER_ID") NOT DEFERRABLE INITIALLY IMMEDIATE NORELY VALIDATE;

-- ----------------------------
-- Foreign Keys structure for table CUSTOMER_CONTACT_NUMBER
-- ----------------------------
ALTER TABLE "BOOKKEEPER"."CUSTOMER_CONTACT_NUMBER" ADD CONSTRAINT "CUSTOMER_CONTACT_NUMBER__CUSTOMERS_FK" FOREIGN KEY ("CUSTOMER_ID") REFERENCES "BOOKKEEPER"."CUSTOMERS" ("CUSTOMER_ID") NOT DEFERRABLE INITIALLY IMMEDIATE NORELY VALIDATE;

-- ----------------------------
-- Foreign Keys structure for table DJANGO_ADMIN_LOG
-- ----------------------------

-- ----------------------------
-- Foreign Keys structure for table OFFER_BOOK
-- ----------------------------
ALTER TABLE "BOOKKEEPER"."OFFER_BOOK" ADD CONSTRAINT "OFFER_BOOK__BOOKS_FK" FOREIGN KEY ("ISBN") REFERENCES "BOOKKEEPER"."BOOKS" ("ISBN") NOT DEFERRABLE INITIALLY IMMEDIATE NORELY VALIDATE;
ALTER TABLE "BOOKKEEPER"."OFFER_BOOK" ADD CONSTRAINT "OFFER_BOOK__OFFERS_FK" FOREIGN KEY ("OFFER_ID") REFERENCES "BOOKKEEPER"."OFFERS" ("OFFER_ID") NOT DEFERRABLE INITIALLY IMMEDIATE NORELY VALIDATE;

-- ----------------------------
-- Foreign Keys structure for table ORDERS
-- ----------------------------
ALTER TABLE "BOOKKEEPER"."ORDERS" ADD CONSTRAINT "ORDERS__CUSTOMERS_FK" FOREIGN KEY ("CUSTOMER_ID") REFERENCES "BOOKKEEPER"."CUSTOMERS" ("CUSTOMER_ID") NOT DEFERRABLE INITIALLY IMMEDIATE NORELY VALIDATE;

-- ----------------------------
-- Foreign Keys structure for table ORDER_BOOK
-- ----------------------------
ALTER TABLE "BOOKKEEPER"."ORDER_BOOK" ADD CONSTRAINT "ORDER_BOOK__BOOKS_FK" FOREIGN KEY ("ISBN") REFERENCES "BOOKKEEPER"."BOOKS" ("ISBN") NOT DEFERRABLE INITIALLY IMMEDIATE NORELY VALIDATE;
ALTER TABLE "BOOKKEEPER"."ORDER_BOOK" ADD CONSTRAINT "ORDER_BOOK__ORDERS_FK" FOREIGN KEY ("ORDER_ID") REFERENCES "BOOKKEEPER"."ORDERS" ("ORDER_ID") NOT DEFERRABLE INITIALLY IMMEDIATE NORELY VALIDATE;

-- ----------------------------
-- Foreign Keys structure for table PUBLISHER_CONTACT_NUMBER
-- ----------------------------
ALTER TABLE "BOOKKEEPER"."PUBLISHER_CONTACT_NUMBER" ADD CONSTRAINT "PUBLISHER_CONTACT_NUMBER__PUBLISHERS_FK" FOREIGN KEY ("PUBLISHER_ID") REFERENCES "BOOKKEEPER"."PUBLISHERS" ("PUBLISHER_ID") NOT DEFERRABLE INITIALLY IMMEDIATE NORELY VALIDATE;

-- ----------------------------
-- Foreign Keys structure for table REQUESTS
-- ----------------------------
ALTER TABLE "BOOKKEEPER"."REQUESTS" ADD CONSTRAINT "REQUESTS__BOOKS_FK" FOREIGN KEY ("ISBN") REFERENCES "BOOKKEEPER"."BOOKS" ("ISBN") NOT DEFERRABLE INITIALLY IMMEDIATE NORELY VALIDATE;
ALTER TABLE "BOOKKEEPER"."REQUESTS" ADD CONSTRAINT "REQUESTS__SUBSCRIBERS_FK" FOREIGN KEY ("CUSTOMER_ID") REFERENCES "BOOKKEEPER"."SUBSCRIBERS" ("CUSTOMER_ID") NOT DEFERRABLE INITIALLY IMMEDIATE NORELY VALIDATE;

-- ----------------------------
-- Foreign Keys structure for table REVIEWS
-- ----------------------------
ALTER TABLE "BOOKKEEPER"."REVIEWS" ADD CONSTRAINT "REVIEWS__BOOKS_FK" FOREIGN KEY ("ISBN") REFERENCES "BOOKKEEPER"."BOOKS" ("ISBN") NOT DEFERRABLE INITIALLY IMMEDIATE NORELY VALIDATE;
ALTER TABLE "BOOKKEEPER"."REVIEWS" ADD CONSTRAINT "REVIEWS__CUSTOMERS_FK" FOREIGN KEY ("CUSTOMER_ID") REFERENCES "BOOKKEEPER"."CUSTOMERS" ("CUSTOMER_ID") NOT DEFERRABLE INITIALLY IMMEDIATE NORELY VALIDATE;

-- ----------------------------
-- Foreign Keys structure for table SUBSCRIBERS
-- ----------------------------
ALTER TABLE "BOOKKEEPER"."SUBSCRIBERS" ADD CONSTRAINT "SUBSCRIBERS__CUSTOMERS_FK" FOREIGN KEY ("CUSTOMER_ID") REFERENCES "BOOKKEEPER"."CUSTOMERS" ("CUSTOMER_ID") NOT DEFERRABLE INITIALLY IMMEDIATE NORELY VALIDATE;

-- ----------------------------
-- Foreign Keys structure for table WISHLISTS
-- ----------------------------
ALTER TABLE "BOOKKEEPER"."WISHLISTS" ADD CONSTRAINT "WISHLISTS__BOOKS_FK" FOREIGN KEY ("ISBN") REFERENCES "BOOKKEEPER"."BOOKS" ("ISBN") NOT DEFERRABLE INITIALLY IMMEDIATE NORELY VALIDATE;
ALTER TABLE "BOOKKEEPER"."WISHLISTS" ADD CONSTRAINT "WISHLISTS__CUSTOMERS_FK" FOREIGN KEY ("CUSTOMER_ID") REFERENCES "BOOKKEEPER"."CUSTOMERS" ("CUSTOMER_ID") NOT DEFERRABLE INITIALLY IMMEDIATE NORELY VALIDATE;

-- ----------------------------
-- Foreign Keys structure for table WRITES
-- ----------------------------
ALTER TABLE "BOOKKEEPER"."WRITES" ADD CONSTRAINT "WRITES__AUTHORS_FK" FOREIGN KEY ("AUTHOR_ID") REFERENCES "BOOKKEEPER"."AUTHORS" ("AUTHOR_ID") NOT DEFERRABLE INITIALLY IMMEDIATE NORELY VALIDATE;
ALTER TABLE "BOOKKEEPER"."WRITES" ADD CONSTRAINT "WRITES__BOOKS_FK" FOREIGN KEY ("ISBN") REFERENCES "BOOKKEEPER"."BOOKS" ("ISBN") NOT DEFERRABLE INITIALLY IMMEDIATE NORELY VALIDATE;
